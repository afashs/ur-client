{"version":3,"sources":["common/graphql/client.ts","components/CardList/TextCardItem.component.tsx","components/CardList/ImgCardItem.component.tsx","components/CardList/TinderImgCard.component.tsx","components/CardList/TinderTextCard.component.tsx","components/Loading/Loading.tsx","components/ImgList/ImgList.component.tsx","components/TextList/TextList.component.tsx","components/Home/Home.component.tsx","components/Header/Header.component.tsx","components/ImgGame/ImgGame.component.tsx","components/TextGame/TextGame.componet.tsx","components/Sidebar/sidedrawer.js","components/Signin/Signin.component.tsx","components/Signup/Signup.component.tsx","components/SearchList/SearchList.component.tsx","components/Upload/Step1.tsx","components/Upload/Dropzone.js","components/Upload/Step2img.tsx","components/Upload/Step2text.tsx","components/Upload/Step3img.tsx","components/Upload/Multistep.component.tsx","components/Mypage/Mypage.component.tsx","components/Comment/Comment.component.tsx","components/Comment/CommentItem.component.tsx","components/Analytics/Analytics.component.tsx","components/ModifyTest/ModifyTest.component.tsx","components/MyTest/MyTest.component.tsx","components/Bookmark/Bookmark.component.tsx","components/ModifyTest/ModifyTestT.component.tsx","components/App.tsx","index.tsx"],"names":["authLink","setContext","_","headers","token","localStorage","getItem","authorization","inputVar","makeVar","types","step1clear","step2clear","searchState","typeCheck","uploadVar","isLoginVar","cache","InMemoryCache","httpLink","createUploadLink","uri","process","client","ApolloClient","link","concat","connectToDevTools","TextCardItem","d","ADD_VIEWS","gql","useMutation","addViews","useState","show","setShow","target","useRef","hasQuestions","setHasQuestions","useEffect","question","Col","className","Container","location","pathname","to","type","id","onClick","variables","questionBody","answer","body","title","OverlayTrigger","placement","delay","hide","overlay","props","Tooltip","Button","variant","views","Overlay","current","style","backgroundColor","padding","margin","color","borderRadius","text","ref","setTimeout","ImgCardItem","hasPhotos","setHasPhotos","photos","src","photoUrl","alt","transform","Math","random","Loading","bookMarkLoading","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","ImgList","GET_CONTENT_ALL","contents","setContents","useQuery","onCompleted","data","getContentAll","fluid","length","map","el","index","userId","bottom","bookUserId","bookMarks","filter","b","TextList","EffectFade","ms","Promise","resolve","fadeInUp","keyframes","rotateUp","Home","viewAll","setViewAll","tinderBtnAni","setTinderBtnAni","btnState","setBtnState","alreadyRemoved","charactersState","characters","setCharacters","useReactiveVar","sort","a","fetchPolicy","item","filterdItem","push","childRefs","useMemo","Array","fill","React","createRef","tinderBtnHandler","e","preventDefault","closest","querySelectorAll","forEach","button","classList","remove","textContent","window","reload","tinderViewAllBtnHandler","add","document","querySelector","tinderImglistBtnHandler","tinderTextlistBtnHandler","Row","md","triggerOnce","cascade","Image","character","onSwipe","dir","nameToDelete","onCardLeftScreen","name","Header","isLogin","searchInput","setSearchInput","searchBtnHandler","history","useHistory","xl","lg","sm","xs","Navbar","Toggle","aria-controls","size","InputGroup","FormControl","value","required","placeholder","aria-describedby","onChange","onKeyPress","key","Append","removeItem","ImgGame","useLocation","GET_CONTENTS","POST_WINCOUNT","POST_BOOKMARK","POST_DELETEBOOKMARK","POST_DELETECONTENT","refetch","refetchQueries","query","gameid","awaitRefetchQueries","addBookMark","deleteBookMark","addCountPhoto","deleteContent","Data","setData","count","setCount","start","setStart","img","setImg","displays","setDisplays","winners","setWinners","rounds","setRounds","transition","setTransiton","doubleClick","setDoubleClick","Boolean","bookMark","setBookMark","userBookMark","setUserBookMark","sweetAlertShow","setSweetAlertShow","sweetAlertLike","setSweetAlertLike","sweetAlertDelete","setSweetAlertDelete","modify","setModify","getContent","jwt","verify","err","decoded","copyHandler","custom","showCancel","showCloseButton","confirmBtnText","cancelBtnText","confirmBtnBsStyle","cancelBtnBsStyle","success","onConfirm","onCancel","showConfirm","CardDeck","Card","Body","Text","result","contentId","deleteBookMarkBtnHandler","onCopy","desc","slice","startHandler","textAlign","pick","console","log","updateImg","clickHandler","borderColor","photoName","winCount","Img","TextGame","POST_TEXT","addCountTxt","questions","setQuestions","answers","setAnswers","rating","setRating","lastPick","setLastPick","isNaN","toFixed","nextQuestions","shift","nextBtnHandler","SideDrawer","Fragment","classNames","active","this","isSideDrawerOpen","bg","expand","Nav","ev","closeSideDrawer","Brand","children","Component","Signin","user_email","user_password","inputs","setInputs","inputHandler","POST_SIGNIN","isOk","setIsOk","login","ok","setItem","POST_OAUTH_SIGNIN","authLogin","responseGoogle","response","googleToken","tokenObj","id_token","Form","onSubmit","email","password","Group","controlId","Label","Control","signinBtnHandler","clientId","render","renderProps","onSuccess","onFailure","cookiePolicy","Signup","user_confirm_password","POST_SIGNUP","signUpOk","setSignUpOk","duplication","setDuplication","createAccount","validation","setValidation","signupBtnHandler","SearchList","GET_SEARCH_CONTENT","searchData","setSearchData","keyword","searchContent","UPLOAD_CONTENT","Step1","setTypes","uploadObjStr","uploadObj","JSON","parse","files","textTest","answer1","answer2","uploadContent","stringify","useForm","register","errors","formState","handleSubmit","setValue","input","Object","keys","as","minLength","defaultValue","rows","xmlns","width","height","viewBox","fillRule","baseStyle","flex","display","flexDirection","alignItems","borderWidth","borderStyle","outline","activeStyle","acceptStyle","rejectStyle","thumbsContainer","flexWrap","marginTop","thumb","border","marginBottom","marginRight","boxSizing","thumbInner","minWidth","overflow","UPLOAD_PHOTO","Previews","setFiles","uploadPhoto","useDropzone","maxFiles","accept","onDrop","useCallback","acceptedFiles","file","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","thumbs","revokeObjectURL","Step2img","isUpload","block","alert","UPLOAD_TEXT","uploadText","newArr","row","keyField","columns","dataField","cellEdit","cellEditFactory","mode","EDTI_PHOTONAME","Step3img","imgSweetAlertSrc","setImgSweetAlertSrc","imgSweetAlertShow","setImgSweetAlertShow","contentFiles","setContentFiles","editPhotoName","photo","idx","photoId","onAfterSave","headerStyle","headerAlign","formatter","cell","thumbnail","editable","afterSaveCell","oldValue","newValue","Multistep","path","exact","component","Step2text","GET_PROFILE","EDIT_PROFILE","DELETE_ACCOUNT","Mypage","setEmail","user_change_password","user_id","isPwdOk","setPwdOk","deleteAccount","editProfile","getProfile","deleteAlertShow","setDeleteAlertShow","modifyBtnHandler","userName","disabled","deleteBtnHandler","from","danger","Comment","handleCommentAdd","CommentItem","handleCommentDelete","moment","updatedAt","fromNow","fontSize","GET_CONTENT","DELETE_COMMENT","ADD_COMMENT","Analytics","commAlertShow","setCommAlertShow","setType","imgs","setImgs","winCountTotal","setWinCountTotal","textTests","setTextTests","comments","setComments","contentTitle","setContentTitle","contentDesc","setContentDesc","modalId","setModalId","modalPassword","setModalPassword","commentArr","imgArr","total","reduce","acc","cur","textArr","answer1Count","answer2Count","addComment","comment","deleteComment","textColumns","winTotal","now","ceil","ProgressBar","animated","label","answer1Rate","answer2Rate","animate","dataEntry","labelStyle","opacity","pointerEvents","imgColumns","classes","defaultSorted","order","btnSize","inputType","validationMsg","ModifyTest","MyTest","Bookmark","EDIT_TEXT","ModifyTestT","editTxt","qid","SideDrawerBrand","NoMatch","ImgGameId","useParams","TextGameId","AnalyticsGameId","ModifyGameId","ModifyTGameId","App","isSideBarOpen","setSideBarState","deregisterListener","listen","needLogin","fixed","expanded","onToggle","toggleState","brand","Item","Link","dotenv","config","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bdba5083.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { makeVar } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { createUploadLink } from \"apollo-upload-client\";\n\n// 헤더\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `${token}` : \"\",\n    },\n  };\n});\n\n// 전역 상태\nexport const inputVar = makeVar({\n  types: \"imggame\",\n  step1clear: false,\n  step2clear: false,\n});\nexport const searchState = makeVar(\"\");\nexport const typeCheck = makeVar(\"\");\n\nexport const uploadVar = makeVar(false);\n\nexport const isLoginVar = makeVar(false);\n\nexport const cache = new InMemoryCache();\n\nconst httpLink = createUploadLink({\n  uri: process.env.REACT_APP_GRAPHQL_URL,\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache,\n  connectToDevTools: true,\n});\n\nexport default client;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n  Container,\n  Col,\n  OverlayTrigger,\n  Button,\n  Tooltip,\n  Overlay,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport {\n  ShareFill,\n  Trophy,\n  CaretRightSquareFill,\n  Eye,\n} from \"react-bootstrap-icons\";\n\nconst TextCardItem = ({ d }: any) => {\n  const ADD_VIEWS = gql`\n    mutation addViews($id: Int!) {\n      addViews(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const [addViews] = useMutation(ADD_VIEWS);\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n\n  const [hasQuestions, setHasQuestions] = useState(false as boolean);\n  useEffect(() => {\n    if (d?.question) {\n      setHasQuestions(true);\n    } else {\n      setHasQuestions(false);\n    }\n  }, []);\n  // const renderTooltipRank = (props: any) => (\n  //   <Tooltip id=\"button-tooltip\" {...props}>\n  //     랭킹보기\n  //   </Tooltip>\n  // );\n\n  // const renderTooltipShare = (props: any) => (\n  //   <Tooltip id=\"button-tooltip\" {...props}>\n  //     클립보드 복사\n  //   </Tooltip>\n  // );\n\n  const renderTooltipViews = (props: any) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      조회수\n    </Tooltip>\n  );\n  return (\n    <Col className=\"mb-5\">\n      <Container>\n        <div\n          className={location.pathname === \"/\" ? \"home-cards front\" : \"front\"}\n        >\n          <div className=\"inner header-items\">\n            {hasQuestions ? (\n              <>\n                <LinkContainer\n                  to={`/${d.type}/${d.id}`}\n                  onClick={() => {\n                    addViews({\n                      variables: {\n                        id: d.id,\n                      },\n                    });\n                  }}\n                >\n                  <div className=\"content-box\">\n                    <div className=\"start-game\">\n                      <div>\n                        <CaretRightSquareFill />\n                      </div>\n                    </div>\n                    <div className=\"answer-box\">\n                      <h5 className=\"question-body\">\n                        {d.question[0]?.questionBody}\n                      </h5>\n                      <span className=\"wordbreak\">\n                        {d.question[0]?.answer[0]?.body}\n                      </span>\n                      <span className=\"wordbreak\">\n                        {d.question[0]?.answer[1]?.body}\n                      </span>\n                    </div>\n                  </div>\n                </LinkContainer>\n              </>\n            ) : (\n              <></>\n            )}\n\n            <div className=\"text-header\">\n              <p>{d.title}</p>\n              {/* <span>{d.desc}</span> */}\n              <div className=\"icon-box\">\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={renderTooltipViews}\n                >\n                  <Button variant=\"info\">\n                    <Eye />\n                    <span className=\"icon-view\">{d.views}</span>\n                  </Button>\n                </OverlayTrigger>\n                <LinkContainer to={`/analytics/${+d.id}/`}>\n                  <Button variant=\"info\">\n                    <Trophy />\n                  </Button>\n                </LinkContainer>\n                <Overlay target={target.current} show={show} placement=\"right\">\n                  {({ ...props }) => (\n                    <div\n                      {...props}\n                      style={{\n                        backgroundColor: \"black\",\n                        padding: \"2px 10px\",\n                        margin: \"0 10px\",\n                        color: \"white\",\n                        borderRadius: 3,\n                        ...props.style,\n                      }}\n                    >\n                      클립보드에 복사되었습니다\n                    </div>\n                  )}\n                </Overlay>\n                <CopyToClipboard text={`https://urtest.shop/textgame/${d.id}`}>\n                  <Button\n                    variant=\"info\"\n                    ref={target}\n                    onClick={() => {\n                      setTimeout(() => setShow(!show), 100);\n                      setTimeout(() => setShow(show), 700);\n                    }}\n                  >\n                    <ShareFill />\n                  </Button>\n                </CopyToClipboard>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </Col>\n  );\n};\n\nexport default TextCardItem;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n  Container,\n  Col,\n  OverlayTrigger,\n  Button,\n  Tooltip,\n  Overlay,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport {\n  ShareFill,\n  Trophy,\n  CaretRightSquareFill,\n  Eye,\n} from \"react-bootstrap-icons\";\nconst ImgCardItem = ({ d }: any) => {\n  const ADD_VIEWS = gql`\n    mutation addViews($id: Int!) {\n      addViews(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n  const [addViews] = useMutation(ADD_VIEWS);\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n\n  const [hasPhotos, setHasPhotos] = useState(false as boolean);\n  useEffect(() => {\n    if (d?.photos) {\n      setHasPhotos(true);\n    } else {\n      setHasPhotos(false);\n    }\n  }, []);\n  // const renderTooltipRank = (props: any) => (\n  //   <Tooltip id=\"button-tooltip\" {...props}>\n  //     랭킹보기\n  //   </Tooltip>\n  // );\n\n  // const renderTooltipShare = (props: any) => (\n  //   <Tooltip id=\"button-tooltip\" {...props}>\n  //     클립보드 복사\n  //   </Tooltip>\n  // );\n\n  const renderTooltipViews = (props: any) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      조회수\n    </Tooltip>\n  );\n\n  return (\n    <Col className=\"mb-5\">\n      <Container>\n        <div\n          className={location.pathname === \"/\" ? \"home-cards front\" : \"front\"}\n        >\n          <div className=\"inner header-items \">\n            {hasPhotos ? (\n              <>\n                <LinkContainer\n                  to={`/${d.type}/${d.id}`}\n                  onClick={() => {\n                    addViews({\n                      variables: {\n                        id: d.id,\n                      },\n                    });\n                  }}\n                >\n                  <div className=\"content-box\">\n                    <div className=\"start-game\">\n                      <div>\n                        <CaretRightSquareFill />\n                      </div>\n                    </div>\n                    <div className=\"img-box\">\n                      <img src={d?.photos[0]?.photoUrl} alt=\"img\" />\n                      <img src={d?.photos[1]?.photoUrl} alt=\"img\" />\n                    </div>\n                  </div>\n                </LinkContainer>\n              </>\n            ) : (\n              <></>\n            )}\n\n            <div className=\"text-box\">\n              <div>\n                <p>{d.title}</p>\n              </div>\n              {/* <span>{d.desc}</span> */}\n              <div className=\"icon-box\">\n                <OverlayTrigger\n                  placement=\"bottom\"\n                  delay={{ show: 250, hide: 400 }}\n                  overlay={renderTooltipViews}\n                >\n                  <Button variant=\"info\">\n                    <Eye />\n                    <span className=\"icon-view\">{d.views}</span>\n                  </Button>\n                </OverlayTrigger>\n                <LinkContainer to={`/analytics/${+d.id}/`}>\n                  <Button variant=\"info\">\n                    <Trophy />\n                  </Button>\n                </LinkContainer>\n                <Overlay target={target.current} show={show} placement=\"right\">\n                  {({ ...props }) => (\n                    <div\n                      {...props}\n                      style={{\n                        backgroundColor: \"black\",\n                        padding: \"2px 10px\",\n                        margin: \"0 10px\",\n                        color: \"white\",\n                        borderRadius: 3,\n                        ...props.style,\n                      }}\n                    >\n                      클립보드에 복사되었습니다\n                    </div>\n                  )}\n                </Overlay>\n                <CopyToClipboard text={`https://urtest.shop/imggame/${d.id}`}>\n                  <Button\n                    variant=\"info\"\n                    ref={target}\n                    onClick={() => {\n                      setTimeout(() => setShow(!show), 100);\n                      setTimeout(() => setShow(show), 700);\n                    }}\n                  >\n                    <ShareFill />\n                  </Button>\n                </CopyToClipboard>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </Col>\n  );\n};\n\nexport default ImgCardItem;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n  Container,\n  OverlayTrigger,\n  Button,\n  Tooltip,\n  Overlay,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport {\n  ShareFill,\n  Trophy,\n  CaretRightSquareFill,\n  Eye,\n} from \"react-bootstrap-icons\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst ImgCardItem = ({ d }: any) => {\n  const ADD_VIEWS = gql`\n    mutation addViews($id: Int!) {\n      addViews(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n  const [addViews] = useMutation(ADD_VIEWS);\n  const [hasPhotos, setHasPhotos] = useState(false as boolean);\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n  useEffect(() => {\n    if (d?.photos) {\n      setHasPhotos(true);\n    } else {\n      setHasPhotos(false);\n    }\n  }, []);\n  const renderTooltipViews = (props: any) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      조회수\n    </Tooltip>\n  );\n  return (\n    <Container>\n      {/* <LinkContainer\n        to={`/${d.type}/${d.id}`}\n        onClick={() => {\n          addViews({\n            variables: {\n              id: d.id,\n            },\n          });\n        }}\n      > */}\n      <div\n        className={`tinder-card ${\n          location.pathname === \"/\" ? \"home-cards front\" : \"front\"\n        }`}\n        style={{\n          transform: `rotate(${Math.random() * (5 - -5) + -5}deg)`,\n        }}\n      >\n        <div className=\"inner header-items \">\n          {hasPhotos ? (\n            <>\n              <div className=\"content-box\">\n                <LinkContainer\n                  to={`/${d.type}/${d.id}`}\n                  onClick={() => {\n                    addViews({\n                      variables: {\n                        id: d.id,\n                      },\n                    });\n                  }}\n                >\n                  <div className=\"tinder-start-game\">\n                    <div>\n                      <CaretRightSquareFill />\n                    </div>\n                  </div>\n                </LinkContainer>\n                <div className=\"tinder-img-box\">\n                  <img src={d?.photos[0]?.photoUrl} alt=\"img\" />\n                  <img src={d?.photos[1]?.photoUrl} alt=\"img\" />\n                </div>\n              </div>\n            </>\n          ) : (\n            <></>\n          )}\n\n          <div className=\"text-box\">\n            <div>\n              <p>{d.title}</p>\n            </div>\n            {/* <span>{d.desc}</span> */}\n            <div className=\"icon-box\">\n              <OverlayTrigger\n                placement=\"bottom\"\n                delay={{ show: 250, hide: 400 }}\n                overlay={renderTooltipViews}\n              >\n                <Button variant=\"info\">\n                  <Eye />\n                  <span className=\"icon-view\">{d.views}</span>\n                </Button>\n              </OverlayTrigger>\n              <LinkContainer to={`/analytics/${+d.id}/`}>\n                <Button variant=\"info\">\n                  <Trophy />\n                </Button>\n              </LinkContainer>\n              <Overlay target={target.current} show={show} placement=\"right\">\n                {({ ...props }) => (\n                  <div\n                    {...props}\n                    style={{\n                      backgroundColor: \"black\",\n                      padding: \"2px 10px\",\n                      margin: \"0 10px\",\n                      color: \"white\",\n                      borderRadius: 3,\n                      ...props.style,\n                    }}\n                  >\n                    클립보드에 복사되었습니다\n                  </div>\n                )}\n              </Overlay>\n              <CopyToClipboard text={`https://urtest.shop/textgame/${d.id}`}>\n                <Button\n                  variant=\"info\"\n                  ref={target}\n                  onClick={() => {\n                    setTimeout(() => setShow(!show), 100);\n                    setTimeout(() => setShow(show), 700);\n                  }}\n                >\n                  <ShareFill />\n                </Button>\n              </CopyToClipboard>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* </LinkContainer> */}\n    </Container>\n  );\n};\n\nexport default ImgCardItem;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n  Container,\n  OverlayTrigger,\n  Button,\n  Tooltip,\n  Overlay,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport {\n  ShareFill,\n  Trophy,\n  CaretRightSquareFill,\n  Eye,\n} from \"react-bootstrap-icons\";\n\nconst TextCardItem = ({ d }: any) => {\n  const ADD_VIEWS = gql`\n    mutation addViews($id: Int!) {\n      addViews(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n  const [addViews] = useMutation(ADD_VIEWS);\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n  const [hasQuestions, setHasQuestions] = useState(false as boolean);\n  useEffect(() => {\n    if (d?.question) {\n      setHasQuestions(true);\n    } else {\n      setHasQuestions(false);\n    }\n  }, []);\n\n  const renderTooltipViews = (props: any) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      조회수\n    </Tooltip>\n  );\n\n  return (\n    <Container>\n      {/* <LinkContainer\n        to={`/${d.type}/${d.id}`}\n        onClick={() => {\n          addViews({\n            variables: {\n              id: d.id,\n            },\n          });\n        }}\n      > */}\n      <div\n        className={`tinder-card ${\n          location.pathname === \"/\" ? \"home-cards front\" : \"front\"\n        }`}\n        style={{\n          transform: `rotate(${Math.random() * (5 - -5) + -5}deg)`,\n        }}\n      >\n        <div className=\"inner header-items\">\n          {hasQuestions ? (\n            <>\n              <div className=\"content-box\">\n                <LinkContainer\n                  to={`/${d.type}/${d.id}`}\n                  onClick={() => {\n                    addViews({\n                      variables: {\n                        id: d.id,\n                      },\n                    });\n                  }}\n                >\n                  <div className=\"tinder-start-game\">\n                    <div>\n                      <CaretRightSquareFill />\n                    </div>\n                  </div>\n                </LinkContainer>\n                <div className=\"tinder-answer-box\">\n                  <h5 className=\"question-body\">\n                    {d.question[0]?.questionBody}\n                  </h5>\n                  <span className=\"wordbreak\">\n                    {d.question[0]?.answer[0]?.body}\n                  </span>\n                  <span className=\"wordbreak\">\n                    {d.question[0]?.answer[1]?.body}\n                  </span>\n                </div>\n              </div>\n            </>\n          ) : (\n            <></>\n          )}\n\n          <div className=\"text-header\">\n            <p>{d.title}</p>\n            {/* <span>{d.desc}</span> */}\n            <div className=\"icon-box\">\n              <OverlayTrigger\n                placement=\"bottom\"\n                delay={{ show: 250, hide: 400 }}\n                overlay={renderTooltipViews}\n              >\n                <Button variant=\"info\">\n                  <Eye />\n                  <span className=\"icon-view\">{d.views}</span>\n                </Button>\n              </OverlayTrigger>\n              <LinkContainer to={`/analytics/${+d.id}/`}>\n                <Button variant=\"info\">\n                  <Trophy />\n                </Button>\n              </LinkContainer>\n              <Overlay target={target.current} show={show} placement=\"right\">\n                {({ ...props }) => (\n                  <div\n                    {...props}\n                    style={{\n                      backgroundColor: \"black\",\n                      padding: \"2px 10px\",\n                      margin: \"0 10px\",\n                      color: \"white\",\n                      borderRadius: 3,\n                      ...props.style,\n                    }}\n                  >\n                    클립보드에 복사되었습니다\n                  </div>\n                )}\n              </Overlay>\n              <CopyToClipboard text={`https://urtest.shop/textgame/${d.id}`}>\n                <Button\n                  variant=\"info\"\n                  ref={target}\n                  onClick={() => {\n                    setTimeout(() => setShow(!show), 100);\n                    setTimeout(() => setShow(show), 700);\n                  }}\n                >\n                  <ShareFill />\n                </Button>\n              </CopyToClipboard>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default TextCardItem;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst Loading = (props: any) => {\n  return (\n    <>\n      <Container\n        className={\n          props.bookMarkLoading ? \"scroll-setting-bookmark\" : \"scroll-setting\"\n        }\n      >\n        <div className=\"loading\">\n          <div className=\"loadingio-spinner-spinner-r7eay34vek\">\n            <div className=\"ldio-92u190um96r\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\nimport ImgCardItem from \"../CardList/ImgCardItem.component\";\nimport { Container } from \"react-bootstrap\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Loading from \"../Loading/Loading\";\nimport Fade from \"react-reveal/Fade\";\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nconst ImgList = (props: any) => {\n  const GET_CONTENT_ALL = gql`\n    query getContentAll($type: String) {\n      getContentAll(type: $type) {\n        id\n        title\n        desc\n        type\n        views\n        userId\n        photos {\n          photoUrl\n        }\n        bookMarks {\n          contentId\n          id\n          userId\n        }\n      }\n    }\n  `;\n  const [contents, setContents] = useState([] as any);\n\n  const {} = useQuery(GET_CONTENT_ALL, {\n    variables: {\n      type: \"imggame\",\n    },\n    onCompleted: (data) => {\n      setContents([...data.getContentAll]);\n    },\n  });\n  return (\n    <>\n      <Container fluid className=\"fluid-item\">\n        {contents.length === 0 ? (\n          <Loading bookMarkLoading={props.bookMarkLoading} />\n        ) : (\n          <>\n            <div className=\"gridbox\">\n              {contents.map((el: any, index: number) => {\n                if (props.userId) {\n                  if (props.userId() === el.userId) {\n                    return (\n                      <div className=\"card-item\" key={index}>\n                        <Fade bottom>\n                          <ImgCardItem\n                            d={el}\n                            key={index}\n                            className=\"card-item\"\n                          />\n                        </Fade>\n                      </div>\n                    );\n                  }\n                } else if (props.bookUserId) {\n                  const book = el.bookMarks?.filter((b: any) => {\n                    if (b.userId === props.bookUserId()) {\n                      return b;\n                    }\n                  });\n                  if (book.length) {\n                    return (\n                      <div className=\"card-item\" key={index}>\n                        <Fade bottom>\n                          <ImgCardItem\n                            d={el}\n                            key={index}\n                            className=\"card-item\"\n                          />\n                        </Fade>\n                      </div>\n                    );\n                  }\n                } else {\n                  return (\n                    <div className=\"card-item\" key={index}>\n                      <Fade bottom>\n                        <ImgCardItem d={el} key={index} className=\"card-item\" />\n                      </Fade>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default ImgList;\n","import React, { useState } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\nimport TextCardItem from \"../CardList/TextCardItem.component\";\nimport { Container } from \"react-bootstrap\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Loading from \"../Loading/Loading\";\nimport Fade from \"react-reveal/Fade\";\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nconst TextList = (props: any) => {\n  const GET_CONTENT_ALL = gql`\n    query getContentAll($type: String) {\n      getContentAll(type: $type) {\n        id\n        title\n        desc\n        type\n        views\n        userId\n        question {\n          questionBody\n          answer {\n            body\n          }\n        }\n        bookMarks {\n          contentId\n          id\n          userId\n        }\n      }\n    }\n  `;\n  const [contents, setContents] = useState([] as any);\n\n  const {} = useQuery(GET_CONTENT_ALL, {\n    variables: {\n      type: \"textgame\",\n    },\n    onCompleted: (data) => {\n      setContents([...data.getContentAll]);\n    },\n  });\n\n  return (\n    <>\n      <Container fluid className=\"fluid-item\">\n        {contents.length === 0 ? (\n          <Loading bookMarkLoading={props.bookMarkLoading} />\n        ) : (\n          <>\n            <div className=\"gridbox\">\n              {contents.map((el: any, index: number) => {\n                if (props.userId) {\n                  if (props.userId() === el.userId) {\n                    return (\n                      <div className=\"card-item\" key={index}>\n                        <Fade bottom>\n                          <TextCardItem\n                            d={el}\n                            key={index}\n                            className=\"card-item\"\n                          />\n                        </Fade>\n                      </div>\n                    );\n                  }\n                } else if (props.bookUserId) {\n                  const book = el.bookMarks?.filter((b: any) => {\n                    if (b.userId === props.bookUserId()) {\n                      return b;\n                    }\n                  });\n                  if (book.length) {\n                    return (\n                      <div className=\"card-item\" key={index}>\n                        <Fade bottom>\n                          <TextCardItem\n                            d={el}\n                            key={index}\n                            className=\"card-item\"\n                          />\n                        </Fade>\n                      </div>\n                    );\n                  }\n                } else {\n                  return (\n                    <div className=\"card-item\" key={index}>\n                      <Fade bottom>\n                        <TextCardItem\n                          d={el}\n                          key={index}\n                          className=\"card-item\"\n                        />\n                      </Fade>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default TextList;\n","import React, { useState, useMemo } from \"react\";\nimport SwiperCore, {\n  Navigation,\n  Pagination,\n  Scrollbar,\n  A11y,\n  EffectFade,\n} from \"swiper\";\nimport { SwiperSlide } from \"swiper/react\";\nimport TextCardItem from \"../CardList/TextCardItem.component\";\nimport ImgCardItem from \"../CardList/ImgCardItem.component\";\nimport TinderImgCardItem from \"../CardList/TinderImgCard.component\";\nimport TinderTextCardItem from \"../CardList/TinderTextCard.component\";\nimport { Container, Button, Row, Col, Image } from \"react-bootstrap\";\nimport { gql, useQuery, useReactiveVar } from \"@apollo/client\";\nimport { searchState } from \"../../common/graphql/client\";\nimport Loading from \"../Loading/Loading\";\nimport ImgList from \"../ImgList/ImgList.component\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/effect-fade/effect-fade.scss\";\nimport TextList from \"../TextList/TextList.component\";\nimport Fade from \"react-reveal/Fade\";\nimport TinderCard from \"react-tinder-card\";\nimport Reveal from \"react-awesome-reveal\";\nimport { keyframes } from \"@emotion/react\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, EffectFade]);\n\nconst delay = (ms: number | undefined) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n\nconst fadeInUp = keyframes`\n  from {\n    opacity: 0;\n    transform: translate3d(0, -200px, 0);\n  }\n\n  to {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n`;\n\nconst rotateUp = keyframes`\n\n  from {\n    opacity: 1;\n    transform: translate3d(0, 0, 0);\n  }\n\n  99% {\n    opacity: 1;\n    height: 100%;\n    z-index: 100;\n  }\n  \n  to {\n    opacity: 0;\n    transform: translate3d(0, -96px, 0);  \n    height: 0;\n    z-index: -1;\n  }\n  \n`;\n\nconst Home = () => {\n  const GET_CONTENT_ALL = gql`\n    query getContentAll {\n      getContentAll {\n        id\n        title\n        desc\n        type\n        views\n        photos {\n          photoUrl\n        }\n        question {\n          questionBody\n          answer {\n            body\n          }\n        }\n      }\n    }\n  `;\n  const [viewAll, setViewAll] = useState(false);\n  const [tinderBtnAni, setTinderBtnAni] = useState(false);\n  const [contents, setContents] = useState([] as any);\n  const [btnState, setBtnState] = useState(\"all\" as string);\n  // tinder ---------\n  const alreadyRemoved = [] as any[];\n  let charactersState = contents;\n  const [characters, setCharacters] = useState([] as any);\n  useReactiveVar(searchState);\n\n  const {} = useQuery(GET_CONTENT_ALL, {\n    onCompleted: (data) => {\n      if (data) {\n        setContents([...data.getContentAll]);\n        setCharacters(\n          [...data.getContentAll].sort((a: any, b: any) => {\n            return a.views - b.views;\n          })\n        );\n        return;\n      }\n      return;\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  const views = contents\n    .map((item: any) => {\n      return item.views;\n    })\n    .sort((a: number, b: number) => b - a);\n\n  const filterdItem = [] as any;\n  views.map((item: any) => {\n    contents.map((el: any) => {\n      if (item === el.views) {\n        filterdItem.push(el);\n        return el;\n      }\n    });\n  });\n  // const btnAll = (e: any) => {\n  //   e.preventDefault();\n  //   setBtnState(\"all\");\n  // };\n  // const btnImg = (e: any) => {\n  //   e.preventDefault();\n  //   setBtnState(\"img\");\n  // };\n  // const btnText = (e: any) => {\n  //   e.preventDefault();\n  //   setBtnState(\"text\");\n  // };\n\n  const childRefs = useMemo(\n    () =>\n      Array(contents.length)\n        .fill(0)\n        .map(() => React.createRef()),\n    []\n  );\n\n  const swiped = (direction: any, nameToDelete: any) => {\n    alreadyRemoved.push(nameToDelete);\n  };\n\n  const outOfFrame = (name: any) => {\n    charactersState = charactersState.filter(\n      (character: any) => character.name !== name\n    );\n  };\n  const tinderBtnHandler = async (e: any) => {\n    e.preventDefault();\n    if (\n      e.target.closest(\".tinder-title\").querySelectorAll(\".aws-btn__content\")\n        .length\n    ) {\n      e.target\n        .closest(\".tinder-title\")\n        .querySelectorAll(\".aws-btn__content\")\n        .forEach((button: any) => {\n          button.classList.remove(\"active\");\n        });\n    }\n    if (e.target.textContent === \"Swipe\") {\n      setBtnState(\"all\");\n      !tinderBtnAni ? setTinderBtnAni(true) : setTinderBtnAni(false);\n      if (!viewAll) {\n        await delay(1000);\n        setViewAll(true);\n      } else {\n        setViewAll(false);\n      }\n    } else {\n      window.location.reload();\n    }\n  };\n  const tinderViewAllBtnHandler = async (e: any) => {\n    e.preventDefault();\n    if (\n      e.target.closest(\".tinder-title\").querySelectorAll(\".aws-btn__content\")\n        .length\n    ) {\n      e.target\n        .closest(\".tinder-title\")\n        .querySelectorAll(\".aws-btn__content\")\n        .forEach((button: any) => {\n          button.classList.remove(\"active\");\n        });\n    }\n    if (e.target.closest(\".aws-btn__content\")) {\n      e.target.closest(\".aws-btn__content\").classList.add(\"active\");\n    }\n    setBtnState(\"all\");\n    if (!tinderBtnAni) {\n      setTinderBtnAni(true);\n    }\n    if (!viewAll) {\n      await delay(1000);\n      setViewAll(true);\n      document\n        .querySelector(\".btn-home-viewall button\")\n        ?.closest(\".aws-btn__content\")\n        ?.classList.add(\"active\");\n    }\n  };\n  const tinderImglistBtnHandler = async (e: any) => {\n    e.preventDefault();\n    if (\n      e.target.closest(\".tinder-title\").querySelectorAll(\".aws-btn__content\")\n        .length\n    ) {\n      e.target\n        .closest(\".tinder-title\")\n        .querySelectorAll(\".aws-btn__content\")\n        .forEach((button: any) => {\n          button.classList.remove(\"active\");\n        });\n    }\n    if (e.target.closest(\".aws-btn__content\")) {\n      e.target.closest(\".aws-btn__content\").classList.add(\"active\");\n    }\n    setBtnState(\"img\");\n    if (!tinderBtnAni) {\n      setTinderBtnAni(true);\n    }\n    if (!viewAll) {\n      await delay(1000);\n      setViewAll(true);\n      document\n        .querySelector(\".btn-home-imglist button\")\n        ?.closest(\".aws-btn__content\")\n        ?.classList.add(\"active\");\n    }\n  };\n  const tinderTextlistBtnHandler = async (e: any) => {\n    e.preventDefault();\n    if (\n      e.target.closest(\".tinder-title\").querySelectorAll(\".aws-btn__content\")\n        .length\n    ) {\n      e.target\n        .closest(\".tinder-title\")\n        .querySelectorAll(\".aws-btn__content\")\n        .forEach((button: any) => {\n          button.classList.remove(\"active\");\n        });\n    }\n    if (e.target.closest(\".aws-btn__content\")) {\n      e.target.closest(\".aws-btn__content\").classList.add(\"active\");\n    }\n    setBtnState(\"text\");\n    if (!tinderBtnAni) {\n      setTinderBtnAni(true);\n    }\n    if (!viewAll) {\n      await delay(1000);\n      setViewAll(true);\n      document\n        .querySelector(\".btn-home-textlist button\")\n        ?.closest(\".aws-btn__content\")\n        ?.classList.add(\"active\");\n    }\n  };\n  return (\n    <>\n      {filterdItem.length === 0 ? (\n        <Loading />\n      ) : (\n        <>\n          {!viewAll ? (\n            <>\n              <Container fluid className=\"p-0 mt-3 mx-0 tinder-wrapper\">\n                <Row className=\" p-0 m-0 justify-content-center tinder-title\">\n                  {!tinderBtnAni ? (\n                    <Reveal keyframes={fadeInUp} triggerOnce cascade>\n                      <Col md=\"auto\" className=\"col-tinder\">\n                        <AwesomeButton\n                          type=\"link\"\n                          className=\"font-jua p-0 btn-tinder-reset\"\n                        >\n                          <Button\n                            variant=\"tinder-urtest\"\n                            type=\"button\"\n                            onClick={(e) => tinderBtnHandler(e)}\n                          >\n                            {viewAll ? \"Swipe\" : \"Reset\"}\n                          </Button>\n                        </AwesomeButton>\n                      </Col>\n                      <Col md=\"auto\" className=\"col-tinder\">\n                        <AwesomeButton\n                          type=\"link\"\n                          className=\"font-jua p-0 btn-tinder-viewall\"\n                        >\n                          <Button\n                            variant=\"tinder-urtest\"\n                            type=\"button\"\n                            onClick={(e) => tinderViewAllBtnHandler(e)}\n                          >\n                            전체보기\n                          </Button>\n                        </AwesomeButton>\n                      </Col>\n                      <Col md=\"auto\" className=\"col-tinder\">\n                        <AwesomeButton\n                          type=\"link\"\n                          className=\"font-jua p-0 btn-tinder-imglist\"\n                        >\n                          <Button\n                            variant=\"tinder-urtest\"\n                            type=\"button\"\n                            onClick={tinderImglistBtnHandler}\n                          >\n                            이상형월드컵\n                          </Button>\n                        </AwesomeButton>\n                      </Col>\n                      <Col md=\"auto\" className=\"col-tinder\">\n                        <AwesomeButton\n                          type=\"link\"\n                          className={`font-jua p-0 ${\n                            btnState === \"text\" ? \"border-bt\" : \"\"\n                          } btn-tinder-textlist`}\n                        >\n                          <Button\n                            variant=\"tinder-urtest\"\n                            type=\"button\"\n                            onClick={tinderTextlistBtnHandler}\n                          >\n                            밸런스게임\n                          </Button>\n                        </AwesomeButton>\n                      </Col>\n                    </Reveal>\n                  ) : (\n                    <Reveal keyframes={rotateUp} triggerOnce>\n                      <Col md=\"auto\" className=\"col-tinder\">\n                        <AwesomeButton\n                          type=\"link\"\n                          className=\"font-jua p-0 btn-tinder-reset\"\n                        >\n                          <Button\n                            variant=\"tinder-urtest\"\n                            type=\"button\"\n                            onClick={(e) => tinderBtnHandler(e)}\n                          >\n                            {viewAll ? \"Swipe\" : \"Reset\"}\n                          </Button>\n                        </AwesomeButton>\n                      </Col>\n                      <Col md=\"auto\" className=\"col-tinder\">\n                        <AwesomeButton\n                          type=\"link\"\n                          className=\"font-jua p-0 btn-tinder-viewall\"\n                        >\n                          <Button\n                            variant=\"tinder-urtest\"\n                            type=\"button\"\n                            onClick={(e) => tinderViewAllBtnHandler(e)}\n                          >\n                            전체보기\n                          </Button>\n                        </AwesomeButton>\n                      </Col>\n                      <Col md=\"auto\" className=\"col-tinder\">\n                        <AwesomeButton\n                          type=\"link\"\n                          className=\"font-jua p-0 btn-tinder-imglist\"\n                        >\n                          <Button\n                            variant=\"tinder-urtest\"\n                            type=\"button\"\n                            onClick={tinderImglistBtnHandler}\n                          >\n                            이상형월드컵\n                          </Button>\n                        </AwesomeButton>\n                      </Col>\n                      <Col md=\"auto\" className=\"col-tinder\">\n                        <AwesomeButton\n                          type=\"link\"\n                          className={`font-jua p-0 ${\n                            btnState === \"text\" ? \"border-bt\" : \"\"\n                          } btn-tinder-textlist`}\n                        >\n                          <Button\n                            variant=\"tinder-urtest\"\n                            type=\"button\"\n                            onClick={tinderTextlistBtnHandler}\n                          >\n                            밸런스게임\n                          </Button>\n                        </AwesomeButton>\n                      </Col>\n                    </Reveal>\n                  )}\n                </Row>\n                <div className=\"tinder-root\">\n                  <div className=\"tinder-div1\">\n                    <div className=\"tinder-div2\">\n                      <div className=\"tinder-card-container\">\n                        <Image\n                          src=\"http://drive.google.com/uc?export=view&id=1uXqJ6LcWhgGm096abl4XUe2RU-amZC4D\"\n                          className=\"guesture\"\n                        />\n                        {characters.map((character: any, index: any) => (\n                          <>\n                            <TinderCard\n                              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                              // @ts-ignore\n                              ref={childRefs[index]}\n                              className=\"swipe\"\n                              key={character.id}\n                              onSwipe={(dir) => swiped(dir, character.id)}\n                              onCardLeftScreen={() => outOfFrame(character.id)}\n                            >\n                              {character.photos.length === 0 ? (\n                                <TinderTextCardItem\n                                  d={character}\n                                  className=\"tinder-card animate__pulse\"\n                                />\n                              ) : (\n                                <TinderImgCardItem\n                                  d={character}\n                                  className=\"tinder-card\"\n                                />\n                              )}\n                            </TinderCard>\n                          </>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Container>\n            </>\n          ) : contents.item === 0 ? (\n            <Loading />\n          ) : (\n            <>\n              <Container fluid className=\"card-container\">\n                <Row className=\" py-0  mt-4 mb-3 mx-0 justify-content-center tinder-title\">\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-reset\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={tinderBtnHandler}\n                      >\n                        {viewAll ? \"Swipe\" : \"Reset\"}\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-viewall\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={tinderViewAllBtnHandler}\n                      >\n                        전체보기\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-imglist\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={tinderImglistBtnHandler}\n                      >\n                        이상형월드컵\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-textlist\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={tinderTextlistBtnHandler}\n                      >\n                        밸런스게임\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                </Row>\n                {btnState === \"all\" ? (\n                  <>\n                    <Container fluid className=\"fluid-item\">\n                      <div className=\"gridbox\">\n                        {contents.map((el: any, index: number) => {\n                          return (\n                            <SwiperSlide className=\"slide-width\" key={index}>\n                              <Fade bottom>\n                                {el.photos.length === 0 ? (\n                                  <TextCardItem d={el} className=\"card-item\" />\n                                ) : (\n                                  <ImgCardItem d={el} className=\"card-item\" />\n                                )}\n                              </Fade>\n                            </SwiperSlide>\n                          );\n                        })}\n                      </div>\n                    </Container>\n                  </>\n                ) : btnState === \"img\" ? (\n                  <ImgList bookMarkLoading={false} />\n                ) : (\n                  <TextList bookMarkLoading={false} />\n                )}\n              </Container>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport {\n  isLoginVar,\n  searchState,\n  typeCheck,\n} from \"../../common/graphql/client\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { Search, HouseDoorFill } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router\";\nimport {\n  Navbar,\n  Button,\n  InputGroup,\n  FormControl,\n  Col,\n  Container,\n} from \"react-bootstrap\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n\nconst Header = () => {\n  const isLogin = useReactiveVar(isLoginVar);\n  if (localStorage.getItem(\"token\")) {\n    isLoginVar(true);\n  }\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"uploadObj\");\n    isLoginVar(false);\n  };\n\n  const [searchInput, setSearchInput] = useState(\"\" as string);\n  const searchInputHandler = (e: any) => {\n    const { value } = e.target;\n    setSearchInput(value);\n  };\n\n  const searchBtnHandler = () => {\n    if (!searchInput) {\n      return;\n    }\n    if (location.pathname === \"/textlist\") {\n      typeCheck(\"textgame\");\n    } else if (location.pathname === \"/imglist\") {\n      typeCheck(\"imggame\");\n    } else if (location.pathname === \"/\") {\n      typeCheck(\"\");\n    }\n    searchState(searchInput);\n    setSearchInput(\"\");\n  };\n\n  const history = useHistory();\n  const onKeyPress = (e: any) => {\n    if (e.key === \"Enter\" && searchInput !== \"\") {\n      searchBtnHandler();\n      history.push(`/searchlist/${searchInput}`);\n      return;\n    }\n  };\n\n  return (\n    <>\n      <Container fluid={true} className=\"sm-pd-0\">\n        <Col xl={2} lg={2} md={3} sm={4} xs={5} className=\"urBrand\">\n          <Navbar.Toggle className=\"mr-2 sm\" aria-controls=\"basic-navbar-nav\" />\n          <LinkContainer to=\"/\">\n            <Button variant=\"dark\" size=\"sm\" className=\"home-btn\">\n              <HouseDoorFill />\n            </Button>\n          </LinkContainer>\n        </Col>\n        {/* <Col xl={4} lg={3} className=\"d-none d-lg-block\">\n          <Navbar.Collapse id=\"basic-navbar-nav\" className=\"\">\n            <Nav className=\"\">\n              <LinkContainer to=\"/textlist\">\n                <Nav.Link>밸런스게임</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/imglist\">\n                <Nav.Link>이상형월드컵</Nav.Link>\n              </LinkContainer>\n              {isLogin ? (\n                <>\n                  <NavDropdown title=\"마이페이지\" id=\"basic-nav-dropdown\">\n                    <LinkContainer to=\"/\">\n                      <Nav.Link>나의 테스트</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/mypage\">\n                      <Nav.Link>정보수정</Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/\">\n                      <Nav.Link>즐겨찾기</Nav.Link>\n                    </LinkContainer>\n                  </NavDropdown>\n                  <LinkContainer to=\"/multistep\">\n                    <Nav.Link>테스트 만들기</Nav.Link>\n                  </LinkContainer>\n                </>\n              ) : (\n                \"\"\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Col> */}\n        <Col xl={9} lg={9} md={8} sm={7} xs={7} className=\"nav mt-1 mr-auto\">\n          <InputGroup size=\"sm\">\n            <FormControl\n              className=\"font-bgr\"\n              value={searchInput}\n              size=\"sm\"\n              required\n              placeholder=\"검색어를 입력해주세요\"\n              aria-describedby=\"basic-addon1\"\n              onChange={searchInputHandler}\n              onKeyPress={onKeyPress}\n            />\n            <InputGroup.Append>\n              <LinkContainer\n                to={searchInput ? `/searchlist/${searchInput}` : \"\"}\n              >\n                <Button variant=\"dark\" onClick={searchBtnHandler}>\n                  <Search />\n                </Button>\n              </LinkContainer>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n        {isLogin ? (\n          <LinkContainer to=\"/\" className=\"d-none d-md-block ml-auto mt-1\">\n            <AwesomeButton type=\"primary\" className=\"font-mg pd-0\" size=\"small\">\n              <Button variant=\"urtest-header\" onClick={() => logoutHandler()}>\n                로그아웃\n              </Button>\n            </AwesomeButton>\n          </LinkContainer>\n        ) : (\n          <LinkContainer to=\"/login\" className=\"d-none d-md-block ml-auto mt-1\">\n            <AwesomeButton type=\"primary\" className=\"font-mg pd-0\" size=\"small\">\n              <Button variant=\"urtest-header\">로그인</Button>\n            </AwesomeButton>\n          </LinkContainer>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Container, Card, CardDeck, Button } from \"react-bootstrap\";\nimport { gql, useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { isLoginVar } from \"../../common/graphql/client\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport {\n  ShareFill,\n  Heart,\n  HeartFill,\n  Trophy,\n  Pen,\n  Trash,\n} from \"react-bootstrap-icons\";\nimport jwt from \"jsonwebtoken\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst ImgGame = (props: any) => {\n  // 전역 변수\n  const location = useLocation();\n  const isLogin = useReactiveVar(isLoginVar);\n  const history = useHistory();\n\n  // 쿼리\n  const GET_CONTENTS = gql`\n    query getContent($id: Int!) {\n      getContent(id: $id) {\n        userId\n        bookMarks {\n          id\n          userId\n          contentId\n        }\n        title\n        desc\n        photos {\n          id\n          photoUrl\n          photoName\n          winCount\n        }\n      }\n    }\n  `;\n\n  const POST_WINCOUNT = gql`\n    mutation addCountPhoto($id: Int!) {\n      addCountPhoto(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const POST_BOOKMARK = gql`\n    mutation addBookMark($id: Int!) {\n      addBookMark(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const POST_DELETEBOOKMARK = gql`\n    mutation deleteBookMark($id: Int!) {\n      deleteBookMark(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const POST_DELETECONTENT = gql`\n    mutation deleteContent($id: Int!) {\n      deleteContent(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const [addBookMark] = useMutation(POST_BOOKMARK, {\n    onCompleted: async () => {\n      return refetch();\n    },\n    refetchQueries: [\n      {\n        query: GET_CONTENTS,\n        variables: {\n          id: +props.gameid,\n        },\n      },\n    ],\n    awaitRefetchQueries: true,\n  });\n  const [deleteBookMark] = useMutation(POST_DELETEBOOKMARK);\n  const [addCountPhoto] = useMutation(POST_WINCOUNT);\n  const [deleteContent] = useMutation(POST_DELETECONTENT);\n\n  const [Data, setData] = useState([] as any);\n  const [count, setCount] = useState(4);\n  const [start, setStart] = useState(true);\n  const [img, setImg] = useState([] as any[]);\n  const [displays, setDisplays] = useState([] as any[]);\n  const [winners, setWinners] = useState([] as any[]);\n  const [rounds, setRounds] = useState(0 as any);\n  const [transition, setTransiton] = useState(false);\n  const [doubleClick, setDoubleClick] = useState(true);\n  const [bookMark, setBookMark] = useState(Boolean);\n  const [userBookMark, setUserBookMark] = useState([] as any);\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const [sweetAlertLike, setSweetAlertLike] = useState(false);\n  const [sweetAlertDelete, setSweetAlertDelete] = useState(false);\n  const [modify, setModify] = useState(false);\n\n  const startHandler = () => {\n    setStart(false);\n    const item = [...Data.photos.slice(0, count)];\n    item.sort(() => Math.random() - 0.5);\n    setImg(item);\n    setDisplays([item[0], item[1]]);\n    setRounds(item.length / 2);\n  };\n\n  const fourCountHandler = () => {\n    setCount(4);\n  };\n  const eightCountHandler = () => {\n    setCount(8);\n  };\n  const oneTwoCountHandler = () => {\n    setCount(16);\n  };\n  const threeTwoCountHandler = () => {\n    setCount(32);\n  };\n  const sixFourCountHandler = () => {\n    setCount(64);\n  };\n\n  const { refetch } = useQuery(GET_CONTENTS, {\n    variables: {\n      id: +props.gameid,\n    },\n    onCompleted: (data) => {\n      setData(data.getContent);\n      setUserBookMark(data.getContent.bookMarks);\n      if (isLogin) {\n        const token = localStorage.getItem(\"token\");\n        const userId = jwt.verify(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          //@ts-ignore\n          token,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          //@ts-ignore\n          process.env.REACT_APP_SECRET_KEY,\n          function (err: any, decoded: any) {\n            return decoded.id;\n          }\n        );\n        data.getContent.bookMarks.map((el: any) => {\n          if (el.userId === userId) {\n            setBookMark(true);\n          }\n        });\n        if (data.getContent.userId === userId) {\n          setModify(true);\n        }\n      }\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  const clickHandler = (pick: any) => {\n    setDoubleClick(false);\n    if (img.length <= 2) {\n      if (winners.length === 0) {\n        console.log(pick.id);\n        setRounds(\"우승\");\n        setDisplays([pick]);\n        setTimeout(() => setTransiton(true), 100);\n        setTimeout(() => setTransiton(false), 600);\n        addCountPhoto({\n          variables: {\n            id: pick.id,\n          },\n        });\n        return;\n      } else {\n        const updateImg = [...winners, pick];\n        setRounds(updateImg.length / 2);\n        setImg(updateImg);\n        setDisplays([pick]);\n        setTimeout(() => setTransiton(true), 100);\n        setTimeout(() => setTransiton(false), 600);\n        setTimeout(() => setDisplays([updateImg[0], updateImg[1]]), 1000);\n        setWinners([]);\n        setTimeout(() => setDoubleClick(true), 1100);\n        return;\n      }\n    } else if (img.length > 2) {\n      setWinners([...winners, pick]);\n      setDisplays([pick]);\n      setTimeout(() => setTransiton(true), 100);\n      setTimeout(() => setTransiton(false), 600);\n      setTimeout(() => setDisplays([img[2], img[3]]), 1000);\n      setImg(img.slice(2));\n      setTimeout(() => setDoubleClick(true), 1100);\n      return;\n    }\n  };\n\n  const copyHandler = () => {\n    setSweetAlertShow(true);\n  };\n\n  const bookMarkBtnHandler = () => {\n    addBookMark({\n      variables: {\n        id: +props.gameid,\n      },\n    });\n    setBookMark(true);\n    return;\n  };\n\n  const deleteBookMarkBtnHandler = () => {\n    let result;\n    const token = localStorage.getItem(\"token\");\n    const userId = jwt.verify(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      //@ts-ignore\n      token,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      //@ts-ignore\n      process.env.REACT_APP_SECRET_KEY,\n      function (err: any, decoded: any) {\n        return decoded.id;\n      }\n    );\n    userBookMark.map((el: any) => {\n      if (el.userId === userId && el.contentId === +props.gameid) {\n        result = el.id;\n      }\n    });\n    deleteBookMark({\n      variables: {\n        id: result,\n      },\n    });\n    setBookMark(false);\n    return;\n  };\n\n  const notLoginHandler = () => {\n    setSweetAlertLike(true);\n  };\n\n  const deleteContentBtnHandler = () => {\n    setSweetAlertDelete(true);\n  };\n\n  return (\n    <>\n      <SweetAlert\n        show={sweetAlertDelete}\n        custom\n        showCancel\n        showCloseButton\n        confirmBtnText=\"삭제\"\n        cancelBtnText=\"취소\"\n        confirmBtnBsStyle=\"danger\"\n        cancelBtnBsStyle=\"light\"\n        success\n        title=\"삭제하시겠습니까?\"\n        onConfirm={() => {\n          deleteContent({\n            variables: {\n              id: +props.gameid,\n            },\n          });\n          setSweetAlertDelete(false);\n          history.push(\"/\");\n          return;\n        }}\n        onCancel={() => {\n          setSweetAlertDelete(false);\n          return;\n        }}\n      ></SweetAlert>\n      <SweetAlert\n        show={sweetAlertLike}\n        custom\n        showCancel\n        showCloseButton\n        confirmBtnText=\"로그인\"\n        cancelBtnText=\"취소\"\n        confirmBtnBsStyle=\"secondary\"\n        cancelBtnBsStyle=\"light\"\n        success\n        title=\"로그인이 필요한 기능입니다.\"\n        onConfirm={() => {\n          history.push(\"/login\");\n          setSweetAlertLike(false);\n          return;\n        }}\n        onCancel={() => {\n          setSweetAlertLike(false);\n          return;\n        }}\n      ></SweetAlert>\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"클립보드에 복사되었습니다.\"\n        onConfirm={() => {\n          setSweetAlertShow(false);\n          return;\n        }}\n        onCancel={() => {\n          setSweetAlertShow(false);\n          return;\n        }}\n      >{`https://urtest.shop${location.pathname}`}</SweetAlert>\n      {start ? (\n        <Container fluid className=\"mt-3\">\n          <CardDeck className=\"vh-92\">\n            <Card className=\" bg-image-imggame border-card\" />\n            <Card className=\"border-card\">\n              <Card.Body>\n                <Card.Text>\n                  {isLogin ? (\n                    bookMark ? (\n                      <AwesomeButton type=\"secondary\" className=\"m-1\">\n                        <Button\n                          variant=\"urtest\"\n                          onClick={() => deleteBookMarkBtnHandler()}\n                        >\n                          <HeartFill />\n                        </Button>\n                      </AwesomeButton>\n                    ) : (\n                      <AwesomeButton type=\"secondary\" className=\"m-1\">\n                        <Button\n                          variant=\"urtest\"\n                          onClick={() => bookMarkBtnHandler()}\n                        >\n                          <Heart />\n                        </Button>\n                      </AwesomeButton>\n                    )\n                  ) : (\n                    <AwesomeButton type=\"secondary\" className=\"m-1\">\n                      <Button\n                        variant=\"urtest\"\n                        onClick={() => notLoginHandler()}\n                      >\n                        <Heart />\n                      </Button>\n                    </AwesomeButton>\n                  )}\n                  <LinkContainer to={`/analytics/${+props.gameid}/`}>\n                    <AwesomeButton type=\"secondary\" className=\"m-1\">\n                      <Button variant=\"urtest\">\n                        <Trophy />\n                      </Button>\n                    </AwesomeButton>\n                  </LinkContainer>\n                  <AwesomeButton type=\"secondary\" className=\"m-1\">\n                    <CopyToClipboard\n                      text={`https://urtest.shop${location.pathname}`}\n                      onCopy={() => copyHandler()}\n                    >\n                      <Button variant=\"urtest\">\n                        <ShareFill />\n                      </Button>\n                    </CopyToClipboard>\n                  </AwesomeButton>\n                  {modify ? (\n                    <>\n                      <LinkContainer to={`/modifytest/${+props.gameid}/`}>\n                        <AwesomeButton type=\"secondary\" className=\"m-1\">\n                          <Button variant=\"urtest\">\n                            <Pen />\n                          </Button>\n                        </AwesomeButton>\n                      </LinkContainer>\n                      <AwesomeButton type=\"secondary\" className=\"m-1\">\n                        <Button\n                          variant=\"urtest\"\n                          onClick={() => deleteContentBtnHandler()}\n                        >\n                          <Trash />\n                        </Button>\n                      </AwesomeButton>\n                    </>\n                  ) : (\n                    \"\"\n                  )}\n                </Card.Text>\n                <Card.Text className=\"card-start-title\">{Data.title}</Card.Text>\n                <Card.Text className=\"card-start-title h-10\">\n                  {count}강\n                </Card.Text>\n                <Card.Text className=\"card-start-desc h-40\">\n                  {Data.desc}\n                </Card.Text>\n                <Card.Text className=\"card-text-font m-4\">\n                  {Data.length !== 0 && Data.photos.length >= 4 ? (\n                    <AwesomeButton type=\"secondary\" className=\"m-1\">\n                      <Button\n                        variant=\"urtest\"\n                        onClick={() => fourCountHandler()}\n                      >\n                        4강\n                      </Button>\n                    </AwesomeButton>\n                  ) : (\n                    \"\"\n                  )}\n                  {Data.length !== 0 && Data.photos.length >= 8 ? (\n                    <AwesomeButton type=\"secondary\" className=\"m-1\">\n                      <Button\n                        variant=\"urtest\"\n                        onClick={() => eightCountHandler()}\n                      >\n                        8강\n                      </Button>\n                    </AwesomeButton>\n                  ) : (\n                    \"\"\n                  )}\n                  {Data.length !== 0 && Data.photos.length >= 16 ? (\n                    <AwesomeButton type=\"secondary\" className=\"m-1\">\n                      <Button\n                        variant=\"urtest\"\n                        onClick={() => oneTwoCountHandler()}\n                      >\n                        16강\n                      </Button>\n                    </AwesomeButton>\n                  ) : (\n                    \"\"\n                  )}\n                  {Data.length !== 0 && Data.photos.length >= 32 ? (\n                    <AwesomeButton type=\"secondary\" className=\"m-1\">\n                      <Button\n                        variant=\"urtest\"\n                        onClick={() => threeTwoCountHandler()}\n                      >\n                        32강\n                      </Button>\n                    </AwesomeButton>\n                  ) : (\n                    \"\"\n                  )}\n                  {Data.length !== 0 && Data.photos.length >= 64 ? (\n                    <AwesomeButton type=\"secondary\">\n                      <Button\n                        variant=\"urtest\"\n                        onClick={() => sixFourCountHandler()}\n                      >\n                        64강\n                      </Button>\n                    </AwesomeButton>\n                  ) : (\n                    \"\"\n                  )}\n                </Card.Text>\n                <Card.Text className=\"card-text-font\">\n                  <AwesomeButton type=\"primary\">\n                    <Button variant=\"urtest\" onClick={() => startHandler()}>\n                      시작하기\n                    </Button>\n                  </AwesomeButton>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </CardDeck>\n        </Container>\n      ) : (\n        <Container className=\"mt-5\" style={{ textAlign: \"center\" }}>\n          <h1 className=\"header-text title-reposition\">\n            {Data.title}{\" \"}\n            {rounds === \"우승\" ? (\n              \"우승\"\n            ) : rounds === 1 ? (\n              `결승`\n            ) : (\n              <>\n                {`${rounds * 2}강`}\n                <br />\n                {`${winners.length + 1} / ${rounds}`}\n              </>\n            )}\n          </h1>\n          {rounds === \"우승\" ? (\n            <div className=\"mt-4\">\n              <LinkContainer to={`/imggame/${+props.gameid}/`}>\n                <AwesomeButton type=\"primary\" className=\"m-1\">\n                  <Button variant=\"urtest\">다시하기</Button>\n                </AwesomeButton>\n              </LinkContainer>\n              <LinkContainer to={`/analytics/${+props.gameid}/`}>\n                <AwesomeButton type=\"primary\" className=\"m-1\">\n                  <Button variant=\"urtest\">랭킹보기</Button>\n                </AwesomeButton>\n              </LinkContainer>\n              <AwesomeButton type=\"primary\" className=\"m-1\">\n                <CopyToClipboard\n                  text={`https://urtest.shop${location.pathname}`}\n                  onCopy={() => copyHandler()}\n                >\n                  <Button variant=\"urtest\">\n                    <ShareFill />\n                  </Button>\n                </CopyToClipboard>\n              </AwesomeButton>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <CardDeck\n            className={\n              displays.length === 1 ? \"card-deck-transition mt-3\" : \"mt-3\"\n            }\n          >\n            {displays.map((d) => {\n              return (\n                <Card\n                  key={d.id}\n                  onClick={\n                    doubleClick\n                      ? () => clickHandler(d)\n                      : () => console.log(doubleClick)\n                  }\n                  style={{ borderColor: \"#ffff\" }}\n                >\n                  <Card.Body className=\"card-size\">\n                    <Card.Text className=\"card-text-font\">\n                      {d.photoName}{\" \"}\n                      {displays.length === 1\n                        ? `우승 횟수 : ${d.winCount}승`\n                        : \"\"}\n                    </Card.Text>\n                    <Card.Img\n                      src={d.photoUrl}\n                      alt=\"\"\n                      className={\n                        transition ? \"card-img-transition\" : \"card-img\"\n                      }\n                      style={{ borderRadius: \"1.5rem\" }}\n                    />\n                  </Card.Body>\n                </Card>\n              );\n            })}\n          </CardDeck>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default ImgGame;\n","import React, { useState } from \"react\";\nimport { gql, useQuery, useMutation, useReactiveVar } from \"@apollo/client\";\nimport { isLoginVar } from \"../../common/graphql/client\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Container, Card, CardDeck, Button } from \"react-bootstrap\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Loading from \"../Loading/Loading\";\nimport {\n  ShareFill,\n  Heart,\n  HeartFill,\n  Trophy,\n  Pen,\n  Trash,\n} from \"react-bootstrap-icons\";\nimport jwt from \"jsonwebtoken\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { Fade } from \"react-awesome-reveal\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst TextGame = (props: any) => {\n  // 전역 변수\n  const isLogin = useReactiveVar(isLoginVar);\n  const location = useLocation();\n  const history = useHistory();\n\n  const GET_CONTENTS = gql`\n    query getContent($id: Int!) {\n      getContent(id: $id) {\n        userId\n        bookMarks {\n          id\n          userId\n          contentId\n        }\n        question {\n          id\n          questionBody\n          answer {\n            id\n            body\n            winCount\n          }\n        }\n      }\n    }\n  `;\n\n  const POST_TEXT = gql`\n    mutation addCountTxt($id: Int!) {\n      addCountTxt(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const POST_BOOKMARK = gql`\n    mutation addBookMark($id: Int!) {\n      addBookMark(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const POST_DELETEBOOKMARK = gql`\n    mutation deleteBookMark($id: Int!) {\n      deleteBookMark(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const POST_DELETECONTENT = gql`\n    mutation deleteContent($id: Int!) {\n      deleteContent(id: $id) {\n        ok\n        error\n      }\n    }\n  `;\n\n  const [addCountTxt] = useMutation(POST_TEXT);\n  const [addBookMark] = useMutation(POST_BOOKMARK, {\n    onCompleted: () => {\n      return refetch();\n    },\n    refetchQueries: [\n      {\n        query: GET_CONTENTS,\n        variables: {\n          id: +props.gameid,\n        },\n      },\n    ],\n    awaitRefetchQueries: true,\n  });\n  const [deleteBookMark] = useMutation(POST_DELETEBOOKMARK);\n  const [deleteContent] = useMutation(POST_DELETECONTENT);\n\n  const [questions, setQuestions] = useState([] as any);\n  const [answers, setAnswers] = useState([] as any);\n  const [rating, setRating] = useState(false);\n  const [lastPick, setLastPick] = useState(false);\n  const [bookMark, setBookMark] = useState(Boolean);\n  const [userBookMark, setUserBookMark] = useState([] as any);\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const [sweetAlertLike, setSweetAlertLike] = useState(false);\n  const [sweetAlertDelete, setSweetAlertDelete] = useState(false);\n  const [doubleClick, setDoubleClick] = useState(true);\n  const [modify, setModify] = useState(false);\n\n  const { refetch } = useQuery(GET_CONTENTS, {\n    variables: {\n      id: +props.gameid,\n    },\n    onCompleted: (data) => {\n      setQuestions(data.getContent.question);\n      setAnswers([\n        data.getContent.question[0].answer[0],\n        data.getContent.question[0].answer[1],\n      ]);\n      setUserBookMark(data.getContent.bookMarks);\n      if (isLogin) {\n        const token = localStorage.getItem(\"token\");\n        const userId = jwt.verify(\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          //@ts-ignore\n          token,\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          //@ts-ignore\n          process.env.REACT_APP_SECRET_KEY,\n          function (err: any, decoded: any) {\n            return decoded.id;\n          }\n        );\n        data.getContent.bookMarks.map((el: any) => {\n          if (el.userId === userId) {\n            setBookMark(true);\n          }\n        });\n        if (data.getContent.userId === userId) {\n          setModify(true);\n        }\n      }\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  const nextBtnHandler = () => {\n    const nextQuestions = [...questions];\n    nextQuestions.shift();\n    setRating(false);\n    setQuestions(nextQuestions);\n    setAnswers([nextQuestions[0].answer[0], nextQuestions[0].answer[1]]);\n    setDoubleClick(true);\n    return;\n  };\n\n  const clickHandler = (pick: any) => {\n    addCountTxt({\n      variables: {\n        id: pick.id,\n      },\n    });\n    setRating(true);\n    setDoubleClick(false);\n    if (questions.length === 1) {\n      setLastPick(true);\n    }\n  };\n\n  const copyHandler = () => {\n    setSweetAlertShow(true);\n  };\n\n  const bookMarkBtnHandler = () => {\n    addBookMark({\n      variables: {\n        id: +props.gameid,\n      },\n    });\n    setBookMark(true);\n    return;\n  };\n\n  const deleteBookMarkBtnHandler = () => {\n    let result;\n    const token = localStorage.getItem(\"token\");\n    const userId = jwt.verify(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      //@ts-ignore\n      token,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      //@ts-ignore\n      process.env.REACT_APP_SECRET_KEY,\n      function (err: any, decoded: any) {\n        return decoded.id;\n      }\n    );\n    userBookMark.map((el: any) => {\n      if (el.userId === userId && el.contentId === +props.gameid) {\n        result = el.id;\n      }\n    });\n    deleteBookMark({\n      variables: {\n        id: result,\n      },\n    });\n    setBookMark(false);\n    return;\n  };\n\n  const notLoginHandler = () => {\n    setSweetAlertLike(true);\n  };\n\n  const deleteContentBtnHandler = () => {\n    setSweetAlertDelete(true);\n  };\n\n  return (\n    <>\n      <SweetAlert\n        show={sweetAlertDelete}\n        custom\n        showCancel\n        showCloseButton\n        confirmBtnText=\"삭제\"\n        cancelBtnText=\"취소\"\n        confirmBtnBsStyle=\"danger\"\n        cancelBtnBsStyle=\"light\"\n        success\n        title=\"삭제하시겠습니까?\"\n        onConfirm={() => {\n          deleteContent({\n            variables: {\n              id: +props.gameid,\n            },\n          });\n          setSweetAlertDelete(false);\n          history.push(\"/\");\n          return;\n        }}\n        onCancel={() => {\n          setSweetAlertDelete(false);\n          return;\n        }}\n      ></SweetAlert>\n      <SweetAlert\n        show={sweetAlertLike}\n        custom\n        showCancel\n        showCloseButton\n        confirmBtnText=\"로그인\"\n        cancelBtnText=\"취소\"\n        confirmBtnBsStyle=\"secondary\"\n        cancelBtnBsStyle=\"light\"\n        success\n        title=\"로그인이 필요한 기능입니다.\"\n        onConfirm={() => {\n          history.push(\"/login\");\n          setSweetAlertLike(false);\n          return;\n        }}\n        onCancel={() => {\n          setSweetAlertLike(false);\n          return;\n        }}\n      ></SweetAlert>\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"클립보드에 복사되었습니다.\"\n        onConfirm={() => {\n          setSweetAlertShow(false);\n          return;\n        }}\n        onCancel={() => {\n          setSweetAlertShow(false);\n          return;\n        }}\n      >{`https://urtest.shop${location.pathname}`}</SweetAlert>\n      {questions.length === 0 ? (\n        <Loading />\n      ) : (\n        <Container className=\"mt-3\">\n          <div style={{ textAlign: \"center\" }}>\n            {isLogin ? (\n              bookMark ? (\n                <AwesomeButton type=\"primary\" className=\"m-1\">\n                  <Button\n                    variant=\"urtest\"\n                    onClick={() => deleteBookMarkBtnHandler()}\n                  >\n                    <HeartFill />\n                  </Button>\n                </AwesomeButton>\n              ) : (\n                <AwesomeButton type=\"primary\" className=\"m-1\">\n                  <Button variant=\"urtest\" onClick={() => bookMarkBtnHandler()}>\n                    <Heart />\n                  </Button>\n                </AwesomeButton>\n              )\n            ) : (\n              <AwesomeButton type=\"primary\" className=\"m-1\">\n                <Button variant=\"urtest\" onClick={() => notLoginHandler()}>\n                  <Heart />\n                </Button>\n              </AwesomeButton>\n            )}\n            <LinkContainer to={`/analytics/${+props.gameid}/`}>\n              <AwesomeButton type=\"primary\" className=\"m-1\">\n                <Button variant=\"urtest\">\n                  <Trophy />\n                </Button>\n              </AwesomeButton>\n            </LinkContainer>\n            <AwesomeButton type=\"primary\" className=\"m-1\">\n              <CopyToClipboard\n                text={`https://urtest.shop${location.pathname}`}\n                onCopy={() => copyHandler()}\n              >\n                <Button variant=\"urtest\">\n                  <ShareFill />\n                </Button>\n              </CopyToClipboard>\n            </AwesomeButton>\n            {modify ? (\n              <>\n                <LinkContainer to={`/modifytext/${+props.gameid}/`}>\n                  <AwesomeButton type=\"primary\" className=\"m-1\">\n                    <Button variant=\"urtest\">\n                      <Pen />\n                    </Button>\n                  </AwesomeButton>\n                </LinkContainer>\n                <AwesomeButton type=\"primary\" className=\"m-1\">\n                  <Button\n                    variant=\"urtest\"\n                    onClick={() => deleteContentBtnHandler()}\n                  >\n                    <Trash />\n                  </Button>\n                </AwesomeButton>\n              </>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <h1 className=\"textgame-title font-jua m-5\">\n            {questions[0].questionBody}\n          </h1>\n          <CardDeck>\n            {answers.map((pick: any) => {\n              return (\n                <Card\n                  key={pick.id}\n                  onClick={() =>\n                    doubleClick ? clickHandler(pick) : console.log(doubleClick)\n                  }\n                >\n                  <Card.Body>\n                    <Card.Text className=\"textgame-answer\">\n                      {pick.body}\n                    </Card.Text>\n                    {rating ? (\n                      <Fade>\n                        <Card.Text\n                          style={{ color: \"red\", textAlign: \"center\" }}\n                        >\n                          {isNaN(\n                            (pick.winCount /\n                              (answers[0].winCount + answers[1].winCount)) *\n                              100\n                          )\n                            ? \"선택률 0%\"\n                            : `선택률 ${(\n                                (pick.winCount /\n                                  (answers[0].winCount + answers[1].winCount)) *\n                                100\n                              ).toFixed(0)}%`}\n                        </Card.Text>\n                      </Fade>\n                    ) : (\n                      \"\"\n                    )}\n                  </Card.Body>\n                </Card>\n              );\n            })}\n          </CardDeck>\n          {rating ? (\n            lastPick ? (\n              \"\"\n            ) : (\n              <div className=\"mt-4\" style={{ textAlign: \"center\" }}>\n                {\" \"}\n                <AwesomeButton type=\"primary\" className=\"m-1\">\n                  <Button variant=\"urtest\" onClick={() => nextBtnHandler()}>\n                    다음 질문\n                  </Button>\n                </AwesomeButton>\n              </div>\n            )\n          ) : (\n            \"\"\n          )}\n          {lastPick ? (\n            <div className=\"mt-4\" style={{ textAlign: \"center\" }}>\n              게임이 종료되었습니다.\n              <div className=\"mt-4\">\n                <LinkContainer to={`/textgame/${+props.gameid}/`}>\n                  <AwesomeButton type=\"primary\" className=\"m-1\">\n                    <Button variant=\"urtest\">다시하기</Button>\n                  </AwesomeButton>\n                </LinkContainer>\n                <LinkContainer to={`/analytics/${+props.gameid}/`}>\n                  <AwesomeButton type=\"primary\" className=\"m-1\">\n                    <Button variant=\"urtest\">랭킹보기</Button>\n                  </AwesomeButton>\n                </LinkContainer>\n                <AwesomeButton type=\"primary\" className=\"m-1\">\n                  <CopyToClipboard\n                    text={`https://urtest.shop${location.pathname}`}\n                    onCopy={() => copyHandler()}\n                  >\n                    <Button variant=\"urtest\">\n                      <ShareFill />\n                    </Button>\n                  </CopyToClipboard>\n                </AwesomeButton>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default TextGame;\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Navbar, Nav, Col } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nexport default class SideDrawer extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Col>\r\n          <div\r\n            id=\"sidebar\"\r\n            className={classNames({ active: this.props.isSideDrawerOpen })}\r\n          >\r\n            <Navbar\r\n              bg=\"light\"\r\n              expand={false}\r\n              variant=\"light\"\r\n              className=\"sideDrawer\"\r\n            >\r\n              <Nav className=\"\">\r\n                <Navbar.Toggle\r\n                  className=\"sm mt-2 ml-3\"\r\n                  onClick={(ev) => this.props.closeSideDrawer(ev)}\r\n                />\r\n              </Nav>\r\n              <LinkContainer to=\"/\" className=\"mr-auto ml-1 mt-1\">\r\n                <Navbar.Brand>Urtest</Navbar.Brand>\r\n              </LinkContainer>\r\n              {/* <LinkContainer to=\"/\" exact className=\"mr-auto\">\r\n              <Nav.Link>Urtest</Nav.Link>\r\n            </LinkContainer> */}\r\n            </Navbar>\r\n            <Navbar\r\n              bg=\"light\"\r\n              expand={false}\r\n              variant=\"light\"\r\n              className=\"sidebar justify-content-start align-content-start d-flex flex-column\"\r\n            >\r\n              {this.props.children}\r\n            </Navbar>\r\n          </div>\r\n          <div\r\n            onClick={(ev) => this.props.closeSideDrawer(ev)}\r\n            className={classNames(\"overlay\", {\r\n              active: this.props.isSideDrawerOpen,\r\n            })}\r\n          />\r\n        </Col>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { isLoginVar } from \"../../common/graphql/client\";\nimport { useReactiveVar, gql, useMutation } from \"@apollo/client\";\nimport { Redirect } from \"react-router-dom\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n\nconst Signin = () => {\n  // 전역 변수\n  const isLogin = useReactiveVar(isLoginVar);\n\n  // 일반 로그인(토큰 관련 정보 확인, 스테이츠 관리 확인)\n  const [inputs, setInputs] = useState({\n    user_email: \"\",\n    user_password: \"\",\n  });\n\n  const { user_email, user_password } = inputs;\n\n  const inputHandler = (e: any) => {\n    const { name, value } = e.target;\n\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const POST_SIGNIN = gql`\n    mutation login($email: String!, $password: String!) {\n      login(email: $email, password: $password) {\n        ok\n        error\n        token\n      }\n    }\n  `;\n  const [isOk, setIsOk] = useState(true);\n\n  const [login] = useMutation(POST_SIGNIN, {\n    onCompleted: (data) => {\n      setIsOk(data.login.ok);\n      if (data.login.ok === true) {\n        localStorage.setItem(\"token\", data.login.token);\n        if (localStorage.getItem(\"token\")) {\n          isLoginVar(true);\n          return;\n        }\n      }\n      return;\n    },\n  });\n\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    login({\n      variables: {\n        email: user_email,\n        password: user_password,\n      },\n    });\n  };\n  const signinBtnHandler = (e: any) => {\n    e.preventDefault();\n    login({\n      variables: {\n        email: user_email,\n        password: user_password,\n      },\n    });\n  };\n\n  // 구글 로그인\n  const POST_OAUTH_SIGNIN = gql`\n    mutation authLogin($googleToken: String!) {\n      authLogin(googleToken: $googleToken) {\n        ok\n        error\n        token\n      }\n    }\n  `;\n\n  const [authLogin] = useMutation(POST_OAUTH_SIGNIN, {\n    onCompleted: (data) => {\n      setIsOk(data.authLogin.ok);\n      if (data.authLogin.ok === true) {\n        localStorage.setItem(\"token\", data.authLogin.token);\n        if (localStorage.getItem(\"token\")) {\n          isLoginVar(true);\n          return;\n        }\n      }\n      return;\n    },\n  });\n\n  const responseGoogle = (response: any) => {\n    authLogin({\n      variables: {\n        googleToken: response.tokenObj.id_token,\n      },\n    });\n  };\n\n  // 유저 정보\n\n  return (\n    <>\n      {/* <Image src=\"http://drive.google.com/uc?export=view&id=1HJXOSa1lG4wdPpGLHeZV6ciiU6-O3hv_\" roundedCircle/> */}\n      {/* <Col xs={6} md={5}>\n            <Image src=\"undraw.svg\" thumbnail/>\n         </Col> */}\n      {/* http://drive.google.com/uc?export=view&id=1HJXOSa1lG4wdPpGLHeZV6ciiU6-O3hv_ */}\n\n      {isLogin ? <Redirect to=\"/\" /> : \"\"}\n      <Container fluid={true} className=\"login-container\">\n        <Row className=\"login-dwn\">\n          <Col md={7} lg={7} className=\"bg-image\" />\n          <Col md={8} lg={4}>\n            <Row className=\"bg-login\">\n              <Col md={8}>\n                <h2 className=\"login-heading mb-4\">Welcome !</h2>\n                <Form onSubmit={onSubmit}>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label className=\"form-label\"></Form.Label>\n                    <Form.Control\n                      className=\"font-bgr\"\n                      // size=\"lg\"\n                      type=\"email\"\n                      placeholder=\"이메일\"\n                      onChange={(e) => {\n                        inputHandler(e);\n                      }}\n                      name=\"user_email\"\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label></Form.Label>\n                    <Form.Control\n                      className=\"font-bgr\"\n                      // size=\"lg\"\n                      type=\"password\"\n                      placeholder=\"비밀번호를 입력하세요\"\n                      onChange={(e) => {\n                        inputHandler(e);\n                      }}\n                      name=\"user_password\"\n                    />\n                    <Form.Label className=\"mt-1 text-danger\">\n                      {isOk ? \" \" : \"* Invalid Email or Password\"}\n                    </Form.Label>\n                  </Form.Group>\n                  <AwesomeButton\n                    type=\"secondary\"\n                    className=\"btn-login text-uppercase mb-2 w-100 font-mg\"\n                  >\n                    <Button\n                      variant=\"urtest\"\n                      // size=\"lg\"\n                      // block\n\n                      type=\"submit\"\n                      onClick={(e) => signinBtnHandler(e)}\n                    >\n                      로그인\n                    </Button>\n                  </AwesomeButton>\n                  <GoogleLogin\n                    clientId=\"724060049648-nnacpoao7gftdukk1gurp600rfgme79k.apps.googleusercontent.com\"\n                    render={(renderProps) => (\n                      <AwesomeButton\n                        type=\"primary\"\n                        className=\"btn-login2 mb-2 w-100 font-mg font-size-1-2\"\n                      >\n                        <Button\n                          onClick={renderProps.onClick}\n                          variant=\"urtest\"\n                          type=\"submit\"\n                        >\n                          Google\n                        </Button>\n                      </AwesomeButton>\n                    )}\n                    onSuccess={responseGoogle}\n                    onFailure={responseGoogle}\n                    cookiePolicy={\"single_host_origin\"}\n                  />\n                  <LinkContainer to=\"/signup\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"mt-2 text-inverse w-100 a-urtest font-size-1\"\n                    >\n                      회원가입\n                    </AwesomeButton>\n                  </LinkContainer>\n                </Form>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Signin;\n","import React, { useState } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n\nconst Signup = () => {\n  // 회원가입\n  const [inputs, setInputs] = useState({\n    user_email: \"\",\n    user_password: \"\",\n    user_confirm_password: \"\",\n  });\n  const { user_email, user_password, user_confirm_password } = inputs;\n\n  const inputHandler = (e: any) => {\n    const { name, value } = e.target;\n\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n  const POST_SIGNUP = gql`\n    mutation createAccount(\n      $userName: String\n      $email: String!\n      $password: String!\n    ) {\n      createAccount(userName: $userName, email: $email, password: $password) {\n        ok\n        error\n      }\n    }\n  `;\n  const [signUpOk, setSignUpOk] = useState(false);\n\n  const [duplication, setDuplication] = useState(false);\n\n  const [createAccount] = useMutation(POST_SIGNUP, {\n    onCompleted: (data) => {\n      if (data.createAccount.ok === true) {\n        setSignUpOk(true);\n        return;\n      }\n      setDuplication(true);\n      return;\n    },\n  });\n\n  const [validation, setValidation] = useState(true);\n\n  const signupBtnHandler = (e: any) => {\n    e.preventDefault();\n    if (user_password === user_confirm_password) {\n      createAccount({\n        variables: {\n          email: user_email,\n          password: user_password,\n        },\n      });\n      setValidation(true);\n      return;\n    }\n    setValidation(false);\n    return;\n  };\n\n  // 유효성 검사\n\n  return (\n    <React.Fragment>\n      {signUpOk ? <Redirect to=\"/login\" /> : \"\"}\n      <Container fluid={true} className=\"login-container\">\n        <Row className=\"login-dwn\">\n          <Col md={7} lg={7} className=\"bg-image\" />\n          <Col md={8} lg={4}>\n            <Row className=\"bg-login\">\n              <Col md={9} lg={8}>\n                <h3 className=\"login-heading mb-4\">회원가입</h3>\n                <Form>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label></Form.Label>\n                    <Form.Control\n                      className=\"font-bgr\"\n                      type=\"email\"\n                      placeholder=\"이메일\"\n                      name=\"user_email\"\n                      onChange={(e) => inputHandler(e)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label></Form.Label>\n                    <Form.Control\n                      className=\"font-bgr\"\n                      type=\"password\"\n                      placeholder=\"비밀번호를 입력해주세요\"\n                      name=\"user_password\"\n                      onChange={(e) => inputHandler(e)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label></Form.Label>\n                    <Form.Control\n                      className=\"font-bgr\"\n                      type=\"password\"\n                      placeholder=\"비밀번호 확인\"\n                      name=\"user_confirm_password\"\n                      onChange={(e) => inputHandler(e)}\n                    />\n                    <Form.Label className=\"mt-1 text-danger\">\n                      {!validation\n                        ? \"* Confirm Password\"\n                        : duplication\n                        ? \"* Email Duplication\"\n                        : \"\"}\n                    </Form.Label>\n                  </Form.Group>\n                  <AwesomeButton\n                    type=\"primary\"\n                    className=\"text-uppercase mb-2 w-100 font-mg\"\n                  >\n                    <Button\n                      variant=\"urtest\"\n                      size=\"lg\"\n                      // block\n\n                      type=\"submit\"\n                      onClick={(e) => signupBtnHandler(e)}\n                    >\n                      Sign Up\n                    </Button>\n                  </AwesomeButton>\n\n                  <LinkContainer to=\"/login\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"mt-2 text-inverse a-urtest w-100\"\n                    >\n                      로그인 하러가기\n                    </AwesomeButton>\n                  </LinkContainer>\n                </Form>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Signup;\n","import { Container } from \"react-bootstrap\";\nimport { searchState, typeCheck } from \"../../common/graphql/client\";\nimport React, { useEffect, useState } from \"react\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\nimport { SwiperSlide } from \"swiper/react\";\nimport Fade from \"react-reveal/Fade\";\nimport { gql, useQuery, useReactiveVar } from \"@apollo/client\";\nimport Loading from \"../Loading/Loading\";\nimport TextCardItem from \"../CardList/TextCardItem.component\";\nimport ImgCardItem from \"../CardList/ImgCardItem.component\";\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\n\nconst SearchList = () => {\n  const GET_SEARCH_CONTENT = gql`\n    query searchContent($keyword: String!, $type: String) {\n      searchContent(keyword: $keyword, type: $type) {\n        id\n        title\n        desc\n        type\n        views\n        photos {\n          photoUrl\n        }\n        question {\n          questionBody\n          answer {\n            body\n          }\n        }\n      }\n    }\n  `;\n  const [contents, setContents] = useState([] as any);\n  const [searchData, setSearchData] = useState(true as any);\n\n  const keyword = useReactiveVar(searchState);\n  const type = useReactiveVar(typeCheck);\n  const { refetch } = useQuery(GET_SEARCH_CONTENT, {\n    fetchPolicy: \"no-cache\",\n    variables: {\n      keyword,\n      type,\n    },\n    onCompleted: (data) => {\n      if (!data || data.searchContent.length === 0) {\n        setSearchData(false);\n        return;\n      }\n      setSearchData(true);\n      setContents([...data.searchContent]);\n      return;\n    },\n  });\n\n  useEffect(() => {\n    refetch();\n    setContents([]);\n  }, [location.pathname]);\n\n  return (\n    <Container fluid className=\"vh-93 pt-5 scroll-setting-search\">\n      {!searchData ? (\n        <div>검색결과가 없습니다</div>\n      ) : contents.length === 0 ? (\n        <Loading />\n      ) : (\n        <div className=\"gridbox\">\n          {contents.map((el: any, index: number) => {\n            return (\n              <SwiperSlide className=\"slide-width\" key={index}>\n                <Fade bottom>\n                  {el.photos.length === 0 ? (\n                    <TextCardItem d={el} className=\"card-item\" />\n                  ) : (\n                    <ImgCardItem d={el} className=\"card-item\" />\n                  )}\n                </Fade>\n              </SwiperSlide>\n            );\n          })}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default SearchList;\n","/* eslint-disable react/prop-types */\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { useReactiveVar, useMutation, gql } from \"@apollo/client\";\nimport { inputVar } from \"../../common/graphql/client\";\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\nconst UPLOAD_CONTENT = gql`\n  mutation uploadContent($title: String!, $desc: String!) {\n    uploadContent(title: $title, desc: $desc) {\n      id\n    }\n  }\n`;\n\nconst Step1 = () => {\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const [types, setTypes] = useState(\"imggame\");\n  const history = useHistory();\n  const uploadObjStr = localStorage.getItem(\"uploadObj\");\n  const uploadObj = uploadObjStr\n    ? JSON.parse(uploadObjStr)\n    : {\n        title: \"\",\n        desc: \"\",\n        files: [],\n        textTest: [\n          { id: \"1\", question: \"질문1\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"2\", question: \"질문2\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"3\", question: \"질문3\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"4\", question: \"질문4\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n        ],\n      };\n\n  const [uploadContent] = useMutation(UPLOAD_CONTENT, {\n    onCompleted: (data) => {\n      uploadObj.contentId = data.uploadContent.id;\n      localStorage.setItem(\"uploadObj\", JSON.stringify(uploadObj));\n      setSweetAlertShow(true);\n      return;\n    },\n  });\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    setValue,\n  } = useForm();\n\n  // 셀렉터 선택\n  const typeSelected = (e: any) => {\n    uploadObj.type = e.target.value;\n    setTypes(e.target.value);\n    setValue(\"type\", e.target.value);\n  };\n\n  const input = useReactiveVar(inputVar);\n\n  const onSubmit = async (data: any) => {\n    if (types === \"imggame\") {\n      if (Object.keys(errors).length === 0) {\n        uploadObj.title = data.title;\n        uploadObj.desc = data.desc;\n        uploadObj.type = data.type;\n        localStorage.setItem(\"uploadObj\", JSON.stringify(uploadObj));\n        inputVar({ ...input, step1clear: true });\n        if (!uploadObj.contentId) {\n          await uploadContent({\n            variables: {\n              title: uploadObj.title,\n              desc: uploadObj.desc,\n            },\n          });\n        } else {\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadObj));\n          setSweetAlertShow(true);\n          return;\n        }\n      }\n      return;\n    }\n    if (types === \"textgame\") {\n      if (Object.keys(errors).length !== 0) {\n        return;\n      } else {\n        uploadObj.title = data.title;\n        uploadObj.desc = data.desc;\n        uploadObj.type = data.type;\n        (uploadObj.textTest = [\n          { id: \"1\", question: \"질문1\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"2\", question: \"질문2\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"3\", question: \"질문3\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"4\", question: \"질문4\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n        ]),\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadObj));\n        inputVar({ ...input, step1clear: true });\n        history.push(\"multistep/step2text\");\n      }\n      return;\n    }\n  };\n  return (\n    <>\n      <Container className=\"mypage-container\">\n        <Container className=\"mypage-point\">\n          <Row className=\"mx-3 upload-row\">\n            <Col md={5} lg={7} className=\"bg-image3\" />\n            <Col md={7} lg={5} className=\" rounded pb-4 pt-4\">\n              <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Row>\n                  <Form.Group as={Col}>\n                    <Form.Label>제목</Form.Label>\n                    <Form.Control\n                      className=\"title font-bgr\"\n                      type=\"text\"\n                      placeholder=\"제목을 작성해주세요\"\n                      {...register(\"title\", { required: true, minLength: 5 })}\n                      defaultValue={uploadObj.title}\n                    />\n                    {errors.title && \"제목은 5글자 이상으로 작성해주세요\"}\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col}>\n                    <Form.Label>설명</Form.Label>\n                    <Form.Control\n                      className=\"font-bgr\"\n                      type=\"text\"\n                      as=\"textarea\"\n                      rows={3}\n                      placeholder=\"설명을 작성해주세요\"\n                      {...register(\"desc\", { required: true, minLength: 5 })}\n                      defaultValue={uploadObj.desc}\n                    />\n                    {errors.desc && \"설명은 5글자 이상으로 작성해주세요\"}\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"types\">\n                    <Form.Label>Types</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      {...register(\"type\")}\n                      onChange={typeSelected}\n                      custom\n                    >\n                      <option value=\"imggame\">이상형 월드컵</option>\n                      <option value=\"textgame\">밸런스게임</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Form.Row>\n                <br></br>\n                <Form.Row>\n                  <Form.Group as={Col}>\n                    <AwesomeButton\n                      type=\"primary\"\n                      className=\"uploadbtn center w-100\"\n                    >\n                      <Button variant=\"urtest\" type=\"submit\">\n                        {/* <ArrowRightCircleFill width=\"32\"/> */}\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"35\"\n                          height=\"35\"\n                          fill=\"currentColor\"\n                          className=\"bi bi-arrow-right\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"\n                          />\n                        </svg>\n                      </Button>\n                    </AwesomeButton>\n                  </Form.Group>\n                </Form.Row>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"테스트 생성 완료!\"\n        onConfirm={() => {\n          history.push(\"multistep/step2img\");\n        }}\n        onCancel={() => {\n          history.push(\"multistep/step2img\");\n        }}\n      >\n        다음단계에서 사진들을 세팅합니다\n      </SweetAlert>\n    </>\n  );\n};\n\nexport default Step1;\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { inputVar, uploadVar } from \"../../common/graphql/client\";\nimport { useReactiveVar, useMutation, gql } from \"@apollo/client\";\n\nconst baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\",\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\",\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\",\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\",\n};\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nconst UPLOAD_PHOTO = gql`\n  mutation uploadPhoto($file: Upload!, $id: Int!) {\n    uploadPhoto(file: $file, id: $id) {\n      contentId\n      id\n      photoUrl\n      photoName\n    }\n  }\n`;\n\nexport default function Previews(props) {\n  // eslint-disable-next-line react/prop-types\n  const [files, setFiles] = useState([]);\n  const input = useReactiveVar(inputVar);\n  useReactiveVar(uploadVar);\n  const uploadObjStr = localStorage.getItem(\"uploadObj\");\n  const uploadObj = uploadObjStr\n    ? JSON.parse(uploadObjStr)\n    : {\n        title: \"\",\n        desc: \"\",\n        files: [],\n        textTest: [\n          { id: \"1\", question: \"질문1\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"2\", question: \"질문2\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"3\", question: \"질문3\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"4\", question: \"질문4\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n        ],\n      };\n  const [uploadPhoto] = useMutation(UPLOAD_PHOTO, {\n    onCompleted: (data) => {\n      console.log(data);\n      return;\n    },\n  });\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    maxFiles: 64,\n    accept: \"image/*\",\n    onDrop: useCallback(async (acceptedFiles) => {\n      await uploadVar(true);\n      setTimeout(() => {\n        uploadVar(false);\n      }, 3000);\n\n      uploadObj.files = acceptedFiles;\n      await acceptedFiles.map(async (file) => {\n        await uploadPhoto({\n          variables: {\n            file: file,\n            id: uploadObj.contentId,\n          },\n        });\n      });\n\n      await setFiles(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n      localStorage.setItem(\"uploadObj\", JSON.stringify(uploadObj));\n    }, []),\n  });\n\n  const thumbs =\n    // eslint-disable-next-line react/prop-types\n    props.files.length !== 0\n      ? // eslint-disable-next-line react/prop-types\n        props.files.map((file) => (\n          <div style={thumb} key={file.photoName}>\n            <div style={thumbInner}>\n              <img src={file.photoUrl} style={img} />\n            </div>\n          </div>\n        ))\n      : files.map((file) => (\n          <div style={thumb} key={file.name}>\n            <div style={thumbInner}>\n              <img src={file.preview} style={img} />\n            </div>\n          </div>\n        ));\n\n  useEffect(\n    () => () => {\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {}),\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} />\n        <p>업로드에 사용할 파일들을 올려주세요</p>\n        <p>다음단계에서 파일들을 수정 할 수 있습니다</p>\n      </div>\n      <aside style={thumbsContainer}>{thumbs}</aside>\n    </section>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport Previews from \"./Dropzone\";\n\nimport { inputVar, uploadVar } from \"../../common/graphql/client\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { Col, Row, Button } from \"react-bootstrap\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n\nconst Step2img = () => {\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const input = useReactiveVar(inputVar);\n  const isUpload = useReactiveVar(uploadVar);\n  const history = useHistory();\n  const uploadObjStr = localStorage.getItem(\"uploadObj\");\n  const uploadObj = uploadObjStr\n    ? JSON.parse(uploadObjStr)\n    : {\n        title: \"\",\n        desc: \"\",\n        files: [],\n        textTest: [\n          { id: \"1\", question: \"질문1\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"2\", question: \"질문2\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"3\", question: \"질문3\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"4\", question: \"질문4\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n        ],\n      };\n  const onSubmit = () => {\n    if (isUpload) {\n      return alert(\n        \"백그라운드에서 업로드가 진행중입니다 3초 후 다시 시도해주세요\"\n      );\n    } else if (uploadObj.files.length >= 4) {\n      inputVar({ ...input, step2clear: true });\n      uploadObj.files = [];\n      uploadObj.textTest = [];\n      localStorage.setItem(\"uploadObj\", JSON.stringify(uploadObj));\n      setSweetAlertShow(true);\n    } else {\n      return alert(\"최소 4장이상의 이미지가 필요합니다\");\n    }\n  };\n  return (\n    <>\n      {!input.step1clear ? <Redirect to=\"/multistep\" /> : \"\"}\n      <Row className=\"justify-content-md-center mt-4 mx-2\">\n        <Col md={8} lg={6} className=\"bg-light rounded pt-3 pb-3\">\n          <Previews files={uploadObj.files} />\n          <AwesomeButton type=\"primary\" className=\"uploadbtn center w-100\">\n            <Button block variant=\"urtest\" type=\"submit\" onClick={onSubmit}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"35\"\n                height=\"35\"\n                fill=\"currentColor\"\n                className=\"bi bi-arrow-right\"\n                viewBox=\"0 0 16 16\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"\n                />\n              </svg>\n            </Button>\n          </AwesomeButton>\n        </Col>\n      </Row>\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"사진 업로드 완료!\"\n        onConfirm={() => {\n          history.push(\"/multistep/step3img\");\n        }}\n        onCancel={() => {\n          history.push(\"/multistep/step3img\");\n        }}\n      >\n        다음단계에서 사진들을 세팅합니다\n      </SweetAlert>\n    </>\n  );\n};\n\nexport default Step2img;\n","import React, { useState } from \"react\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { inputVar } from \"../../common/graphql/client\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nconst UPLOAD_TEXT = gql`\n  mutation uploadText($title: String, $desc: String, $textTest: [data]) {\n    uploadText(title: $title, desc: $desc, textTest: $textTest) {\n      error\n      ok\n    }\n  }\n`;\n\nconst Step2img = () => {\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const input = useReactiveVar(inputVar);\n  const history = useHistory();\n  const uploadObjStr = localStorage.getItem(\"uploadObj\");\n  const [uploadText] = useMutation(UPLOAD_TEXT, {\n    onCompleted: () => {\n      setSweetAlertShow(true);\n      return;\n    },\n  });\n  const uploadObj = uploadObjStr\n    ? JSON.parse(uploadObjStr)\n    : {\n        title: \"\",\n        desc: \"\",\n        files: [],\n        textTest: [\n          { id: \"1\", question: \"질문1\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"2\", question: \"질문2\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"3\", question: \"질문3\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"4\", question: \"질문4\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n        ],\n      };\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"문항번호\",\n    },\n    {\n      dataField: \"question\",\n      text: \"질문\",\n    },\n    {\n      dataField: \"answer1\",\n      text: \"답변1\",\n    },\n    {\n      dataField: \"answer2\",\n      text: \"답변2\",\n    },\n  ];\n  const onSubmit = async () => {\n    const newArr = uploadObj.textTest.filter((row: any) => {\n      delete row.id;\n      if (row.question && row.answer1 && row.answer2) {\n        return row;\n      }\n    });\n    await uploadText({\n      variables: {\n        title: uploadObj.title,\n        desc: uploadObj.desc,\n        textTest: newArr,\n      },\n    });\n  };\n  return (\n    <>\n      {!input.step1clear ? <Redirect to=\"/multistep\" /> : \"\"}\n      <Row className=\"justify-content-md-center mt-4 mx-2\">\n        <Col md={8} lg={7} className=\"bg-light3 rounded pt-3 pb-3\">\n          <>\n            <BootstrapTable\n              keyField=\"id\"\n              data={uploadObj.textTest}\n              columns={columns}\n              cellEdit={cellEditFactory({\n                mode: \"click\",\n              })}\n            />\n          </>\n          <Button\n            block\n            variant=\"dark\"\n            type=\"submit\"\n            size=\"lg\"\n            onClick={onSubmit}\n          >\n            {/* <ArrowRightCircleFill/> */}\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"35\"\n              height=\"35\"\n              fill=\"currentColor\"\n              className=\"bi bi-arrow-right\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z\"\n              />\n            </svg>\n          </Button>\n        </Col>\n      </Row>\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"업로드 완료!\"\n        onConfirm={() => {\n          const uploadReset = {\n            title: \"\",\n            desc: \"\",\n            files: [],\n            textTest: [\n              {\n                id: \"1\",\n                question: \"질문1\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"2\",\n                question: \"질문2\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"3\",\n                question: \"질문3\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"4\",\n                question: \"질문4\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n            ],\n          };\n          inputVar({\n            types: \"imggame\",\n            step1clear: false,\n            step2clear: false,\n          });\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadReset));\n          history.push(\"/\");\n        }}\n        onCancel={() => {\n          const uploadReset = {\n            title: \"\",\n            desc: \"\",\n            files: [],\n            textTest: [\n              {\n                id: \"1\",\n                question: \"질문1\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"2\",\n                question: \"질문2\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"3\",\n                question: \"질문3\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"4\",\n                question: \"질문4\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n            ],\n          };\n          inputVar({\n            types: \"imggame\",\n            step1clear: false,\n            step2clear: false,\n          });\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadReset));\n          history.push(\"/\");\n        }}\n      >\n        홈화면으로 이동합니다\n      </SweetAlert>\n    </>\n  );\n};\n\nexport default Step2img;\n","import React, { useState } from \"react\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport { Col, Row, Button, Image } from \"react-bootstrap\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport { inputVar } from \"../../common/graphql/client\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n// 쿼리\nconst GET_CONTENTS = gql`\n  query getContent($id: Int!) {\n    getContent(id: $id) {\n      photos {\n        id\n        photoUrl\n        photoName\n      }\n    }\n  }\n`;\n\nconst EDTI_PHOTONAME = gql`\n  mutation editPhotoName($id: Int!, $photoName: String) {\n    editPhotoName(id: $id, photoName: $photoName) {\n      error\n      ok\n    }\n  }\n`;\n\nconst Step3img = () => {\n  const history = useHistory();\n  const [imgSweetAlertSrc, setImgSweetAlertSrc] = useState(\"\");\n  const [imgSweetAlertShow, setImgSweetAlertShow] = useState(false);\n  const uploadObjStr = localStorage.getItem(\"uploadObj\");\n  const input = useReactiveVar(inputVar);\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const [contentFiles, setContentFiles] = useState([] as any);\n  const [editPhotoName] = useMutation(EDTI_PHOTONAME, {\n    onCompleted: (data) => {\n      console.log(data);\n      return;\n    },\n  });\n  const uploadObj = uploadObjStr\n    ? JSON.parse(uploadObjStr)\n    : {\n        title: \"\",\n        desc: \"\",\n        files: [],\n        textTest: [\n          { id: \"1\", question: \"질문1\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"2\", question: \"질문2\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"3\", question: \"질문3\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"4\", question: \"질문4\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n        ],\n      };\n\n  useQuery(GET_CONTENTS, {\n    variables: {\n      id: uploadObj.contentId,\n    },\n    onCompleted: async (data) => {\n      await data.getContent.photos.map((photo: any, idx: number) => {\n        uploadObj.files[idx] = {\n          id: idx + 1,\n          photoId: photo.id,\n          photoUrl: photo.photoUrl,\n          photoName: photo.photoName,\n        };\n      });\n      setContentFiles(uploadObj.files);\n      await localStorage.setItem(\"uploadObj\", JSON.stringify(uploadObj));\n    },\n  });\n\n  const imageFormatter = (cell: any) => {\n    return (\n      <Image\n        onClick={(e) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          setImgSweetAlertSrc(e.target.src);\n          setImgSweetAlertShow(true);\n        }}\n        className=\"thumb\"\n        src={`${cell}`}\n        thumbnail\n      />\n    );\n  };\n\n  const onAfterSave = async (row: any) => {\n    console.log(row);\n    await editPhotoName({\n      variables: {\n        id: row.photoId,\n        photoName: row.photoName,\n      },\n    });\n  };\n\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"번호\",\n      headerStyle: {\n        width: \"10%\",\n      },\n      headerAlign: \"center\",\n    },\n    {\n      dataField: \"photoUrl\",\n      text: \"사진\",\n      headerStyle: {\n        width: \"20%\",\n      },\n      formatter: imageFormatter,\n      editable: false,\n    },\n    {\n      dataField: \"photoName\",\n      text: \"이미지 이름\",\n    },\n  ];\n\n  const onSubmit = () => {\n    setSweetAlertShow(true);\n    return;\n  };\n\n  return (\n    <>\n      {!input.step2clear ? <Redirect to=\"/multistep\" /> : \"\"}\n      {contentFiles === 0 ? (\n        <div>loading</div>\n      ) : (\n        <Row className=\"justify-content-md-center mt-4 mx-2\">\n          <Col md={8} className=\"bg-light rounded pt-3 pb-3\">\n            <>\n              <BootstrapTable\n                keyField=\"id\"\n                data={contentFiles}\n                columns={columns}\n                cellEdit={cellEditFactory({\n                  mode: \"click\",\n                  afterSaveCell: (oldValue: any, newValue: any, row: any) => {\n                    onAfterSave(row);\n                  },\n                })}\n              />\n            </>\n            <Button\n              block\n              variant=\"dark\"\n              type=\"submit\"\n              size=\"lg\"\n              onClick={onSubmit}\n            >\n              생성 완료\n            </Button>\n          </Col>\n        </Row>\n      )}\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"테스트 만들기 완료!\"\n        onConfirm={() => {\n          const uploadReset = {\n            title: \"\",\n            desc: \"\",\n            files: [],\n            textTest: [\n              {\n                id: \"1\",\n                question: \"질문1\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"2\",\n                question: \"질문2\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"3\",\n                question: \"질문3\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"4\",\n                question: \"질문4\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n            ],\n          };\n          inputVar({\n            types: \"imggame\",\n            step1clear: false,\n            step2clear: false,\n          });\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadReset));\n          history.push(\"/\");\n        }}\n        onCancel={() => {\n          const uploadReset = {\n            title: \"\",\n            desc: \"\",\n            files: [],\n            textTest: [\n              {\n                id: \"1\",\n                question: \"질문1\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"2\",\n                question: \"질문2\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"3\",\n                question: \"질문3\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"4\",\n                question: \"질문4\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n            ],\n          };\n          inputVar({\n            types: \"imggame\",\n            step1clear: false,\n            step2clear: false,\n          });\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadReset));\n          history.push(\"/\");\n        }}\n      >\n        홈화면으로 이동합니다\n      </SweetAlert>\n      <SweetAlert\n        title=\"\"\n        show={imgSweetAlertShow}\n        showConfirm={false}\n        onConfirm={() => {\n          setImgSweetAlertShow(false);\n        }}\n        onCancel={() => {\n          setImgSweetAlertShow(false);\n        }}\n      >\n        <Image src={`${imgSweetAlertSrc}`} className=\"w-100\" />\n      </SweetAlert>\n    </>\n  );\n};\n\nexport default Step3img;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Step1 from \"./Step1\";\nimport Step2img from \"./Step2img\";\nimport Step2text from \"./Step2text\";\nimport Step3img from \"./Step3img\";\n\nconst Multistep = () => {\n  return (\n    <>\n      <Route path=\"/multistep\" exact={true} component={Step1} />\n      <Route path=\"/multistep/step2img\" component={Step2img} />\n      <Route path=\"/multistep/step3img\" component={Step3img} />\n      <Route path=\"/multistep/step2text\" component={Step2text} />\n    </>\n  );\n};\n\nexport default Multistep;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col, Row, Container } from \"react-bootstrap\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { Redirect } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { useReactiveVar, gql, useMutation, useQuery } from \"@apollo/client\";\nimport { isLoginVar } from \"../../common/graphql/client\";\nimport { useHistory } from \"react-router-dom\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\nconst GET_PROFILE = gql`\n  query getProfile($id: Int!) {\n    getProfile(id: $id) {\n      id\n      email\n    }\n  }\n`;\nconst EDIT_PROFILE = gql`\n  mutation editProfile($email: String, $password: String, $userName: String) {\n    editProfile(email: $email, password: $password, userName: $userName) {\n      error\n      ok\n    }\n  }\n`;\n\nconst DELETE_ACCOUNT = gql`\n  mutation deleteAccount($id: Int!) {\n    deleteAccount(id: $id) {\n      error\n      ok\n    }\n  }\n`;\n\nconst POST_SIGNIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      ok\n      error\n      token\n    }\n  }\n`;\n\nconst Mypage = () => {\n  const history = useHistory();\n  const isLogin = useReactiveVar(isLoginVar);\n  const [email, setEmail] = useState();\n  const [inputs, setInputs] = useState({\n    user_password: \"\",\n    user_confirm_password: \"\",\n    user_change_password: \"\",\n    user_id: 0,\n  });\n  const [isOk, setIsOk] = useState(true);\n  const [isPwdOk, setPwdOk] = useState(true);\n\n  const [login] = useMutation(POST_SIGNIN, {\n    onCompleted: (data) => {\n      if (data.login.ok === true) {\n        setIsOk(true);\n        return;\n      }\n      setIsOk(false);\n      return;\n    },\n  });\n  const [deleteAccount] = useMutation(DELETE_ACCOUNT, {\n    onCompleted: () => {\n      history.push(\"/\");\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"uploadObj\");\n      isLoginVar(false);\n      return;\n    },\n  });\n  const [editProfile] = useMutation(EDIT_PROFILE, {\n    onCompleted: (data) => {\n      if (data.editProfile.ok === true) {\n        setSweetAlertShow(true);\n        return;\n      }\n      alert(\"수정 실패\");\n      return;\n    },\n  });\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    history.push(\"/login\");\n  } else {\n    const userId = jwt.verify(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      //@ts-ignore\n      token,\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      //@ts-ignore\n      process.env.REACT_APP_SECRET_KEY,\n      function (err: any, decoded: any) {\n        return decoded.id;\n      }\n    );\n    useQuery(GET_PROFILE, {\n      variables: {\n        id: userId,\n      },\n      onCompleted: (data) => {\n        setEmail(data.getProfile.email);\n      },\n    });\n  }\n  const { user_password, user_change_password } = inputs;\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const [deleteAlertShow, setDeleteAlertShow] = useState(false);\n  const inputHandler = (e: any) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n    !user_change_password ? setPwdOk(false) : setPwdOk(true);\n  };\n\n  const modifyBtnHandler = async (e: any) => {\n    e.preventDefault();\n    await login({\n      variables: {\n        email: email,\n        password: user_password,\n      },\n    });\n\n    if (user_change_password.length > 0 && isOk) {\n      await editProfile({\n        variables: {\n          email: email,\n          password: user_change_password,\n          userName: \"null\",\n        },\n      });\n    } else {\n      setPwdOk(false);\n    }\n  };\n\n  const deleteBtnHandler = (e: any) => {\n    e.preventDefault();\n    setDeleteAlertShow(true);\n    return;\n  };\n\n  return (\n    <>\n      {!isLogin ? <Redirect to=\"/login\" /> : \"\"}\n      <Container className=\"mypage-container\">\n        <Container className=\"mypage-point\">\n          <Row className=\"mx-3 mypage-row\">\n            <Col md={5} lg={7} className=\"bg-image2\" />\n            <Col md={7} lg={5} className=\"rounded pb-4 pt-4\">\n              <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <br></br>\n                  <Form.Label>이메일</Form.Label>\n                  <Form.Control\n                    className=\"font-bgr\"\n                    disabled\n                    type=\"email\"\n                    placeholder={email}\n                    name=\"user_email\"\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\" className=\"mt-4\">\n                  <Form.Label>현재 비밀번호</Form.Label>\n                  <Form.Control\n                    className=\"font-bgr\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"user_password\"\n                    onChange={(e) => inputHandler(e)}\n                  />\n                  <Form.Label className=\"mt-1 text-danger fs-20 font-BGR\">\n                    {isOk ? \" \" : \"* Password 인증에 실패하였습니다\"}\n                  </Form.Label>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>변경할 비밀번호</Form.Label>\n                  <Form.Control\n                    className=\"font-bgr\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"user_change_password\"\n                    onChange={(e) => inputHandler(e)}\n                  />\n                  <Form.Label className=\"mt-1 text-danger fs-20\">\n                    {isPwdOk ? \" \" : \"변경할 패스워드를 입력해주세요\"}\n                  </Form.Label>\n                </Form.Group>\n                <Row className=\"justify-content-between\">\n                  <AwesomeButton\n                    type=\"primary\"\n                    className=\" mb-3 ml-5 mr-5 font-mg w-100\"\n                  >\n                    <Button\n                      variant=\"urtest\"\n                      type=\"submit\"\n                      onClick={(e) => modifyBtnHandler(e)}\n                    >\n                      수정하기\n                    </Button>\n                  </AwesomeButton>\n\n                  <AwesomeButton\n                    className=\" text-uppercase  mb-4 ml-5 mr-5 w-100 font-mg\"\n                    type=\"secondary\"\n                  >\n                    <Button\n                      type=\"submit\"\n                      variant=\"urtest\"\n                      onClick={(e) => deleteBtnHandler(e)}\n                    >\n                      회원탈퇴\n                    </Button>\n                  </AwesomeButton>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"수정완료\"\n        onConfirm={() => {\n          setInputs({\n            user_password: \"\",\n            user_confirm_password: \"\",\n            user_change_password: \"\",\n            user_id: 0,\n          });\n          Array.from(document.querySelectorAll(\"#formBasicPassword\")).forEach(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            //@ts-ignore\n            (input) => (input.value = \"\")\n          );\n          setSweetAlertShow(false);\n        }}\n        onCancel={() => {\n          setInputs({\n            user_password: \"\",\n            user_confirm_password: \"\",\n            user_change_password: \"\",\n            user_id: 0,\n          });\n          Array.from(document.querySelectorAll(\"#formBasicPassword\")).forEach(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            //@ts-ignore\n            (input) => (input.value = \"\")\n          );\n          setSweetAlertShow(false);\n        }}\n      >\n        패스워드가 변경되었습니다.\n      </SweetAlert>\n      <SweetAlert\n        show={deleteAlertShow}\n        danger\n        title=\"회원탈퇴\"\n        confirmBtnBsStyle={\"danger\"}\n        onConfirm={() => {\n          const userId = jwt.verify(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            //@ts-ignore\n            token,\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            //@ts-ignore\n            process.env.REACT_APP_SECRET_KEY,\n            function (err: any, decoded: any) {\n              return decoded.id;\n            }\n          );\n          deleteAccount({\n            variables: {\n              id: userId,\n            },\n          });\n          setDeleteAlertShow(false);\n        }}\n        onCancel={() => {\n          setDeleteAlertShow(false);\n        }}\n      >\n        정말로 탈퇴하시겠습니까?\n      </SweetAlert>\n    </>\n  );\n};\n\nexport default Mypage;\n","import React from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\n\nconst Comment = (props: any) => {\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <Form onSubmit={handleSubmit(props.handleCommentAdd)} className=\"comm-form\">\n      <Form.Row>\n        <Form.Group as={Col}>\n          <Form.Label>\n            댓글 달기\n            <Form.Control\n              type=\"text\"\n              placeholder=\"패스워드\"\n              {...register(\"password\")}\n              defaultValue={\"\"}\n            />\n          </Form.Label>\n          <Form.Control\n            type=\"text\"\n            as=\"textarea\"\n            rows={3}\n            placeholder=\"내용\"\n            {...register(\"desc\")}\n            defaultValue={\"\"}\n          />\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Button\n            className=\"float-right\"\n            variant=\"dark\"\n            type=\"submit\"\n            size=\"sm\"\n          >\n            댓글달기\n          </Button>\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default Comment;\n","import React from \"react\";\nimport { Card, Button, Col, Row } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\"; // 이줄 추가\nconst CommentItem = (props: any) => {\n  const { handleCommentDelete } = props;\n  return (\n    <>\n      <Row>\n        <Col>\n          <Card className=\" my-2\">\n            <div className=\"border p-2\">\n              <Row className=\"m-0\">\n                <div className=\"w-100\">\n                  <p className=\"my-2\">{props.desc}</p>\n                </div>\n                <p className=\"small m-0 mt-1 mr-3\">익명</p>\n                <p className=\"small text-secondary m-0 mt-1\">\n                  {moment(+props.updatedAt).fromNow()}\n                </p>\n                <div className=\"flex-grow-1 pl-2\">\n                  <Button\n                    as=\"input\"\n                    type=\"button\"\n                    variant=\"secondary\"\n                    value=\"삭제\"\n                    size=\"sm\"\n                    className=\"mb-2  float-right\"\n                    style={{ fontSize: \"0.5rem\" }}\n                    onClick={() => {\n                      handleCommentDelete(props.id, props.password);\n                    }}\n                  />\n                </div>\n              </Row>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default CommentItem;\n","import React, { useState } from \"react\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport Comment from \"../Comment/Comment.component\";\nimport CommentItem from \"../Comment/CommentItem.component\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Col, Row, Image, ProgressBar } from \"react-bootstrap\";\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nconst GET_CONTENT = gql`\n  query getContent($id: Int!) {\n    getContent(id: $id) {\n      comments {\n        contentId\n        desc\n        id\n        password\n        updatedAt\n      }\n      desc\n      id\n      photos {\n        contentId\n        id\n        photoName\n        photoUrl\n        winCount\n      }\n      question {\n        answer {\n          body\n          createdAt\n          id\n          questionId\n          updatedAt\n          winCount\n        }\n        contentId\n        questionBody\n        id\n        updatedAt\n      }\n      type\n      title\n      updatedAt\n    }\n  }\n`;\n\nconst DELETE_COMMENT = gql`\n  mutation deleteComment($id: Int!) {\n    deleteComment(id: $id) {\n      error\n      ok\n    }\n  }\n`;\n\nconst ADD_COMMENT = gql`\n  mutation addComment($desc: String!, $id: Int!, $password: String!) {\n    addComment(desc: $desc, id: $id, password: $password) {\n      error\n      ok\n    }\n  }\n`;\n\nconst Analytics = (props: any) => {\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const [commAlertShow, setCommAlertShow] = useState(false);\n  const [imgSweetAlertSrc, setImgSweetAlertSrc] = useState(\"\");\n  const [imgSweetAlertShow, setImgSweetAlertShow] = useState(false);\n  const [type, setType] = useState(\"\" as any);\n  const [imgs, setImgs] = useState([] as any[]);\n  const [winCountTotal, setWinCountTotal] = useState(0 as any);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [textTests, setTextTests] = useState([] as any[]);\n  const [comments, setComments] = useState([] as any[]);\n  const [contentTitle, setContentTitle] = useState(\"\" as any);\n  const [contentDesc, setContentDesc] = useState(\"\" as any);\n  const [modalId, setModalId] = useState(0 as any);\n  const [modalPassword, setModalPassword] = useState(\"\" as any);\n  const { refetch } = useQuery(GET_CONTENT, {\n    variables: {\n      id: +props.gameid,\n    },\n    onCompleted: async (data) => {\n      await setType(data.getContent.type);\n      await setContentTitle(data.getContent.title);\n      await setContentDesc(data.getContent.desc);\n      const commentArr = [...data.getContent.comments];\n      await commentArr.sort((a: any, b: any) => {\n        return +b.updatedAt - +a.updatedAt;\n      });\n      await setComments(commentArr);\n      if (data.getContent.type === \"imggame\") {\n        const imgArr: any = [];\n        data.getContent.photos.map((photo: any, idx: number) => {\n          imgArr[idx] = {\n            id: idx + 1,\n            photoId: photo.id,\n            photoUrl: photo.photoUrl,\n            photoName: photo.photoName,\n            winCount: photo.winCount,\n          };\n        });\n        const total = imgArr.reduce(\n          (acc: any, cur: any) => +acc + +cur.winCount,\n          0\n        );\n        setWinCountTotal(total);\n        setImgs(imgArr);\n        return;\n      }\n      if (data.getContent.type === \"textgame\") {\n        const textArr: any = [];\n        data.getContent.question.map((question: any, idx: number) => {\n          textArr[idx] = {\n            id: idx + 1,\n            question: question.questionBody,\n            answer1: question.answer[0].body,\n            answer2: question.answer[1].body,\n            answer1Count: question.answer[0].winCount,\n            answer2Count: question.answer[1].winCount,\n          };\n        });\n        setTextTests(textArr);\n        return;\n      }\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  const [addComment] = useMutation(ADD_COMMENT, {\n    onCompleted: async () => {\n      return refetch();\n    },\n    refetchQueries: [\n      {\n        query: GET_CONTENT,\n        variables: {\n          id: +props.gameid,\n        },\n      },\n    ],\n    awaitRefetchQueries: true,\n  });\n  const [deleteComment] = useMutation(DELETE_COMMENT, {\n    onCompleted: () => {\n      setComments(comments.filter((comment) => comment.id !== modalId));\n      setModalId(0);\n      setModalPassword(\"\");\n      return;\n    },\n  });\n\n  const imageFormatter = (cell: any) => {\n    return (\n      <Image\n        onClick={(e) => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          setImgSweetAlertSrc(e.target.src);\n          setImgSweetAlertShow(true);\n        }}\n        className=\"thumb\"\n        src={`${cell}`}\n        thumbnail\n      />\n    );\n  };\n  const questionFomatter = (cell: any, row: any) => {\n    const winTotal = row.answer1Count + row.answer2Count;\n    return (\n      <>\n        <div>{cell}</div>\n        <div>투표 수 : {winTotal}</div>\n      </>\n    );\n  };\n\n  const answerRatingFormatter = (cell: any, row: any) => {\n    const winTotal = row.answer1Count + row.answer2Count;\n    const answer1Rate = Math.ceil((row.answer1Count / winTotal) * 100);\n    const answer2Rate = Math.ceil((row.answer2Count / winTotal) * 100);\n    return (\n      <PieChart\n        data={[\n          { title: row.answer1, value: answer1Rate, color: \"#6bb2ff\" },\n          { title: row.answer2, value: answer2Rate, color: \"#f74a5b\" },\n        ]}\n        animate\n        label={({ dataEntry }) => dataEntry.value + \"%\"}\n        // labelPosition={100 - 60 / 2}\n        labelStyle={{\n          fill: \"#fff\",\n          opacity: 0.75,\n          pointerEvents: \"none\",\n        }}\n      />\n    );\n  };\n  const answer1RatingFormatter = (cell: any, row: any) => {\n    const winTotal = row.answer1Count + row.answer2Count;\n    if (winTotal === 0) {\n      return cell;\n    } else {\n      const now = Math.ceil((row.answer1Count / winTotal) * 100);\n      return (\n        <>\n          <p>{cell}</p>\n          {/* {now < 50 ? ( */}\n          <ProgressBar animated now={now} label={`${now}%`} />\n          {/* ) : (\n            <ProgressBar\n              animated\n              now={now}\n              label={`${now}%`}\n              variant=\"danger\"\n            />\n          )} */}\n          <p>[ {row.answer1Count} ]</p>\n        </>\n      );\n    }\n  };\n  const answer2RatingFormatter = (cell: any, row: any) => {\n    const winTotal = row.answer1Count + row.answer2Count;\n    if (winTotal === 0) {\n      return cell;\n    } else {\n      const now = Math.ceil((row.answer2Count / winTotal) * 100);\n      return (\n        <>\n          <p>{cell}</p>\n          {/* {now < 50 ? (\n            <ProgressBar animated now={now} label={`${now}%`} />\n          ) : ( */}\n          <ProgressBar animated now={now} label={`${now}%`} variant=\"danger\" />\n          {/* )} */}\n\n          <p>[ {row.answer2Count} ]</p>\n        </>\n      );\n    }\n  };\n\n  const ratingFormatter = (cell: any) => {\n    if (winCountTotal === 0) {\n      return cell;\n    }\n    if (cell !== 0) {\n      const now = Math.ceil((cell / winCountTotal) * 100);\n      return (\n        <>\n          {now < 20 ? (\n            <ProgressBar animated now={now} label={`${now}%`} variant=\"info\" />\n          ) : now < 40 ? (\n            <ProgressBar\n              animated\n              now={now}\n              label={`${now}%`}\n              variant=\"success\"\n            />\n          ) : now < 60 ? (\n            <ProgressBar animated now={now} label={`${now}%`} />\n          ) : now < 80 ? (\n            <ProgressBar\n              animated\n              now={now}\n              label={`${now}%`}\n              variant=\"warning\"\n            />\n          ) : (\n            <ProgressBar\n              animated\n              now={now}\n              label={`${now}%`}\n              variant=\"danger\"\n            />\n          )}\n\n          <p>\n            [ {cell} / {winCountTotal} ]\n          </p>\n        </>\n      );\n    }\n  };\n\n  const textColumns = [\n    // {\n    //   dataField: \"id\",\n    //   text: \"번호\",\n    //   headerStyle: {\n    //     width: \"10%\",\n    //   },\n    //   headerAlign: \"center\",\n    // },\n    {\n      dataField: \"question\",\n      text: \"질문\",\n      headerStyle: {\n        width: \"30%\",\n      },\n      formatter: questionFomatter,\n    },\n    {\n      dataField: \"answer1\",\n      text: \"답변1\",\n      headerStyle: {\n        width: \"30%\",\n      },\n      formatter: answer1RatingFormatter,\n    },\n    {\n      dataField: \"answer2\",\n      text: \"답변2\",\n      headerStyle: {\n        width: \"30%\",\n      },\n      formatter: answer2RatingFormatter,\n    },\n    {\n      dataField: \"answer\",\n      text: \"승률\",\n      headerStyle: {\n        width: \"30%\",\n      },\n      formatter: answerRatingFormatter,\n    },\n  ];\n\n  const imgColumns = [\n    // {\n    //   dataField: \"id\",\n    //   text: \"번호\",\n    //   headerStyle: {\n    //     width: \"10%\",\n    //   },\n    //   headerAlign: \"center\",\n    // },\n    {\n      dataField: \"photoUrl\",\n      text: \"사진\",\n      headerStyle: {\n        width: \"20%\",\n      },\n      formatter: imageFormatter,\n    },\n    {\n      dataField: \"photoName\",\n      text: \"이름\",\n      sort: true,\n      classes: \"wordbreak\",\n      headerStyle: {\n        width: \"30%\",\n      },\n    },\n    {\n      dataField: \"winCount\",\n      text: \"승률 [ 우승 / 전체 플레이 ]\",\n      sort: true,\n      headerStyle: {\n        width: \"50%\",\n      },\n      formatter: ratingFormatter,\n    },\n  ];\n\n  const handleCommentDelete = (id: any, password: any) => {\n    setSweetAlertShow(true);\n    setModalId(id);\n    setModalPassword(password);\n  };\n  const handleCommentAdd = (e: any) => {\n    addComment({\n      variables: {\n        id: +props.gameid,\n        password: e.password,\n        desc: e.desc,\n      },\n    });\n    setCommAlertShow(true);\n    return;\n  };\n  return (\n    <>\n      <Row className=\"justify-content-md-center mt-4 mx-2\">\n        <Col md={8} className=\"rounded pt-3 pb-3\">\n          <h1 className=\"font-bgr-b\">{contentTitle}</h1>\n          <hr className=\"my-2\"></hr>\n          <p className=\"font-bgr\">{contentDesc}</p>\n          {type === \"imggame\" ? (\n            <BootstrapTable\n              keyField=\"id\"\n              data={imgs}\n              columns={imgColumns}\n              defaultSorted={[\n                {\n                  dataField: \"winCount\",\n                  order: \"desc\",\n                },\n              ]}\n            />\n          ) : (\n            <BootstrapTable\n              keyField=\"id\"\n              data={textTests}\n              columns={textColumns}\n            />\n          )}\n\n          <Comment handleCommentAdd={handleCommentAdd} />\n\n          {comments.length !== 0\n            ? comments.map((comment) => {\n                return (\n                  <CommentItem\n                    key={comment.id}\n                    id={comment.id}\n                    password={comment.password}\n                    desc={comment.desc}\n                    handleCommentDelete={handleCommentDelete}\n                    updatedAt={comment.updatedAt}\n                  />\n                );\n              })\n            : \"\"}\n          <SweetAlert\n            show={sweetAlertShow}\n            input\n            required\n            confirmBtnText=\"삭제\"\n            btnSize=\"md\"\n            confirmBtnBsStyle=\"danger\"\n            inputType=\"test\"\n            title=\"Enter Password\"\n            validationMsg=\"비밀번호를 입력해주세요\"\n            onConfirm={(e) => {\n              if (e === modalPassword) {\n                deleteComment({\n                  variables: {\n                    id: modalId,\n                  },\n                });\n                setSweetAlertShow(false);\n              } else {\n                setSweetAlertShow(false);\n                alert(\"패스워드가 일치하지 않습니다\");\n              }\n            }}\n            onCancel={() => {\n              setSweetAlertShow(false);\n            }}\n          />\n          <SweetAlert\n            title=\"\"\n            show={imgSweetAlertShow}\n            showConfirm={false}\n            onConfirm={() => {\n              setImgSweetAlertShow(false);\n            }}\n            onCancel={() => {\n              setImgSweetAlertShow(false);\n            }}\n          >\n            <Image src={`${imgSweetAlertSrc}`} className=\"w-100\" />\n          </SweetAlert>\n          <SweetAlert\n            title=\"\"\n            success\n            show={commAlertShow}\n            showConfirm={false}\n            onConfirm={() => {\n              setCommAlertShow(false);\n              window.location.reload();\n              return;\n            }}\n            onCancel={() => {\n              setCommAlertShow(false);\n              window.location.reload();\n              return;\n            }}\n          >\n            댓글 작성 완료\n          </SweetAlert>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Analytics;\n","import React, { useState } from \"react\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport { Col, Row, Button, Image } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport jwt from \"jsonwebtoken\";\n\n// 쿼리\nconst GET_CONTENTS = gql`\n  query getContent($id: Int!) {\n    getContent(id: $id) {\n      userId\n      photos {\n        id\n        photoUrl\n        photoName\n      }\n      title\n      desc\n      type\n    }\n  }\n`;\n\nconst EDTI_PHOTONAME = gql`\n  mutation editPhotoName($id: Int!, $photoName: String) {\n    editPhotoName(id: $id, photoName: $photoName) {\n      error\n      ok\n    }\n  }\n`;\n\nconst ModifyTest = (props: any) => {\n  const history = useHistory();\n  const uploadObjStr = localStorage.getItem(\"uploadObj\");\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const [contentFiles, setContentFiles] = useState([] as any);\n  const [editPhotoName] = useMutation(EDTI_PHOTONAME, {\n    onCompleted: (data) => {\n      console.log(data);\n      return;\n    },\n  });\n  const uploadObj = uploadObjStr\n    ? JSON.parse(uploadObjStr)\n    : {\n        title: \"\",\n        desc: \"\",\n        files: [],\n        textTest: [\n          { id: \"1\", question: \"질문1\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"2\", question: \"질문2\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"3\", question: \"질문3\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"4\", question: \"질문4\", answer1: \"답변1\", answer2: \"답변2\" },\n          { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n          { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n        ],\n      };\n\n  useQuery(GET_CONTENTS, {\n    variables: {\n      id: +props.gameid,\n    },\n    onCompleted: async (data) => {\n      const token = localStorage.getItem(\"token\");\n      const userId = jwt.verify(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        //@ts-ignore\n        token,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        //@ts-ignore\n        process.env.REACT_APP_SECRET_KEY,\n        function (err: any, decoded: any) {\n          return decoded.id;\n        }\n      );\n      if (data.getContent.userId !== +userId) {\n        history.push(\"/\");\n        return;\n      }\n      if (data.getContent.type !== \"imggame\") {\n        history.push(\"/\");\n        return;\n      }\n      await data.getContent.photos.map((photo: any, idx: number) => {\n        uploadObj.files[idx] = {\n          id: idx + 1,\n          photoId: photo.id,\n          photoUrl: photo.photoUrl,\n          photoName: photo.photoName,\n        };\n      });\n      setContentFiles(uploadObj.files);\n      await localStorage.setItem(\"uploadObj\", JSON.stringify(uploadObj));\n    },\n  });\n\n  function imageFormatter(cell: any) {\n    return <Image src={`${cell}`} thumbnail />;\n  }\n\n  const onAfterSave = async (row: any) => {\n    await editPhotoName({\n      variables: {\n        id: row.photoId,\n        photoName: row.photoName,\n      },\n    });\n  };\n\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"이미지번호\",\n      headerStyle: {\n        width: \"10%\",\n      },\n      headerAlign: \"center\",\n    },\n    {\n      dataField: \"photoUrl\",\n      text: \"사진\",\n      headerStyle: {\n        width: \"20%\",\n      },\n      formatter: imageFormatter,\n      editable: false,\n    },\n    {\n      dataField: \"photoName\",\n      text: \"이미지 이름\",\n    },\n  ];\n\n  const onSubmit = () => {\n    setSweetAlertShow(true);\n    return;\n  };\n\n  return (\n    <>\n      {contentFiles === 0 ? (\n        <div>loading</div>\n      ) : (\n        <Row className=\"justify-content-md-center mt-4 mx-2\">\n          <Col md={8} className=\"bg-light rounded pt-3 pb-3\">\n            <>\n              <BootstrapTable\n                keyField=\"id\"\n                data={contentFiles}\n                columns={columns}\n                cellEdit={cellEditFactory({\n                  mode: \"click\",\n                  afterSaveCell: (oldValue: any, newValue: any, row: any) => {\n                    onAfterSave(row);\n                  },\n                })}\n              />\n            </>\n            <Button\n              block\n              variant=\"dark\"\n              type=\"submit\"\n              size=\"lg\"\n              onClick={onSubmit}\n            >\n              수정 완료\n            </Button>\n          </Col>\n        </Row>\n      )}\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"테스트 수정 완료!\"\n        onConfirm={() => {\n          const uploadReset = {\n            title: \"\",\n            desc: \"\",\n            files: [],\n            textTest: [\n              {\n                id: \"1\",\n                question: \"질문1\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"2\",\n                question: \"질문2\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"3\",\n                question: \"질문3\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"4\",\n                question: \"질문4\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n            ],\n          };\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadReset));\n          history.push(\"/\");\n        }}\n        onCancel={() => {\n          const uploadReset = {\n            title: \"\",\n            desc: \"\",\n            files: [],\n            textTest: [\n              {\n                id: \"1\",\n                question: \"질문1\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"2\",\n                question: \"질문2\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"3\",\n                question: \"질문3\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"4\",\n                question: \"질문4\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n            ],\n          };\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadReset));\n          history.push(\"/\");\n        }}\n      >\n        홈화면으로 이동합니다\n      </SweetAlert>\n    </>\n  );\n};\n\nexport default ModifyTest;\n","import React, { useState } from \"react\";\nimport SwiperCore, {\n  Navigation,\n  Pagination,\n  Scrollbar,\n  A11y,\n  EffectFade,\n} from \"swiper\";\nimport jwt from \"jsonwebtoken\";\nimport { SwiperSlide } from \"swiper/react\";\nimport TextCardItem from \"../CardList/TextCardItem.component\";\nimport ImgCardItem from \"../CardList/ImgCardItem.component\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport { gql, useQuery, useReactiveVar } from \"@apollo/client\";\nimport { searchState } from \"../../common/graphql/client\";\nimport Loading from \"../Loading/Loading\";\nimport ImgList from \"../ImgList/ImgList.component\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/effect-fade/effect-fade.scss\";\nimport TextList from \"../TextList/TextList.component\";\nimport Fade from \"react-reveal/Fade\";\n// import { Fade as Afade } from \"react-awesome-reveal\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, EffectFade]);\n\nconst MyTest = () => {\n  const GET_CONTENT_ALL = gql`\n    query getContentAll {\n      getContentAll {\n        id\n        userId\n        title\n        desc\n        type\n        views\n        photos {\n          photoUrl\n        }\n        question {\n          questionBody\n          answer {\n            body\n          }\n        }\n      }\n    }\n  `;\n  const [contents, setContents] = useState([] as any);\n  const [btnState, setBtnState] = useState(\"all\" as string);\n  // tinder ---------\n  useReactiveVar(searchState);\n\n  const {} = useQuery(GET_CONTENT_ALL, {\n    onCompleted: (data) => {\n      if (data) {\n        setContents([...data.getContentAll]);\n\n        return;\n      }\n      return;\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  const views = contents\n    .map((item: any) => {\n      return item.views;\n    })\n    .sort((a: number, b: number) => b - a);\n\n  const filterdItem = [] as any;\n  views.map((item: any) => {\n    contents.map((el: any) => {\n      if (item === el.views) {\n        filterdItem.push(el);\n        return el;\n      }\n    });\n  });\n  const ViewAllBtnHandler = (e: any) => {\n    e.preventDefault();\n    setBtnState(\"all\");\n  };\n  const ImglistBtnHandler = (e: any) => {\n    e.preventDefault();\n    setBtnState(\"img\");\n  };\n  const TextlistBtnHandler = (e: any) => {\n    e.preventDefault();\n    setBtnState(\"text\");\n  };\n\n  return (\n    <>\n      {filterdItem.length === 0 ? (\n        <Loading />\n      ) : (\n        <>\n          {contents.item === 0 ? (\n            <Loading />\n          ) : (\n            <>\n              <Container fluid className=\"card-container mt-4\">\n                <Row className=\"py-0 mt-3 mb-3 justify-content-center tinder-title mytest-title\">\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-viewall\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={ViewAllBtnHandler}\n                      >\n                        전체보기\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-imglist\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={ImglistBtnHandler}\n                      >\n                        이상형월드컵\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-textlist\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={TextlistBtnHandler}\n                      >\n                        밸런스게임\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                </Row>\n                {btnState === \"all\" ? (\n                  <>\n                    <Container fluid className=\"fluid-item\">\n                      <div className=\"gridbox\">\n                        {contents.map((el: any, index: number) => {\n                          const token = localStorage.getItem(\"token\");\n                          const userId = jwt.verify(\n                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                            //@ts-ignore\n                            token,\n                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                            //@ts-ignore\n                            process.env.REACT_APP_SECRET_KEY,\n                            function (err: any, decoded: any) {\n                              return decoded.id;\n                            }\n                          );\n                          if (el.userId === userId) {\n                            return (\n                              <SwiperSlide\n                                className=\"slide-width mb-2\"\n                                key={index}\n                              >\n                                <Fade bottom>\n                                  {el.photos.length === 0 ? (\n                                    <TextCardItem\n                                      d={el}\n                                      className=\"card-item\"\n                                    />\n                                  ) : (\n                                    <ImgCardItem d={el} className=\"card-item\" />\n                                  )}\n                                </Fade>\n                              </SwiperSlide>\n                            );\n                          }\n                        })}\n                      </div>\n                    </Container>\n                  </>\n                ) : btnState === \"img\" ? (\n                  <ImgList\n                    bookMarkLoading={true}\n                    userId={() => {\n                      const token = localStorage.getItem(\"token\");\n                      const userId = jwt.verify(\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        token,\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        process.env.REACT_APP_SECRET_KEY,\n                        function (err: any, decoded: any) {\n                          return decoded.id;\n                        }\n                      );\n                      return userId;\n                    }}\n                  />\n                ) : (\n                  <TextList\n                    bookMarkLoading={true}\n                    userId={() => {\n                      const token = localStorage.getItem(\"token\");\n                      const userId = jwt.verify(\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        token,\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        process.env.REACT_APP_SECRET_KEY,\n                        function (err: any, decoded: any) {\n                          return decoded.id;\n                        }\n                      );\n                      return userId;\n                    }}\n                  />\n                )}\n              </Container>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MyTest;\n","import React, { useState } from \"react\";\nimport SwiperCore, {\n  Navigation,\n  Pagination,\n  Scrollbar,\n  A11y,\n  EffectFade,\n} from \"swiper\";\nimport jwt from \"jsonwebtoken\";\nimport { SwiperSlide } from \"swiper/react\";\nimport TextCardItem from \"../CardList/TextCardItem.component\";\nimport ImgCardItem from \"../CardList/ImgCardItem.component\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\nimport { gql, useQuery, useReactiveVar } from \"@apollo/client\";\nimport { searchState } from \"../../common/graphql/client\";\nimport Loading from \"../Loading/Loading\";\nimport ImgList from \"../ImgList/ImgList.component\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/effect-fade/effect-fade.scss\";\nimport TextList from \"../TextList/TextList.component\";\nimport Fade from \"react-reveal/Fade\";\n// import { Fade as Afade } from \"react-awesome-reveal\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nimport { AwesomeButton } from \"react-awesome-button\";\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, EffectFade]);\n\nconst Bookmark = () => {\n  const GET_CONTENT_ALL = gql`\n    query getContentAll {\n      getContentAll {\n        id\n        userId\n        title\n        desc\n        type\n        views\n        photos {\n          photoUrl\n        }\n        question {\n          questionBody\n          answer {\n            body\n          }\n        }\n        bookMarks {\n          contentId\n          id\n          userId\n        }\n      }\n    }\n  `;\n  const [contents, setContents] = useState([] as any);\n  const [btnState, setBtnState] = useState(\"all\" as string);\n  // tinder ---------\n  useReactiveVar(searchState);\n\n  const {} = useQuery(GET_CONTENT_ALL, {\n    onCompleted: (data) => {\n      if (data) {\n        setContents([...data.getContentAll]);\n\n        return;\n      }\n      return;\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  const views = contents\n    .map((item: any) => {\n      return item.views;\n    })\n    .sort((a: number, b: number) => b - a);\n\n  const filterdItem = [] as any;\n  views.map((item: any) => {\n    contents.map((el: any) => {\n      if (item === el.views) {\n        filterdItem.push(el);\n        return el;\n      }\n    });\n  });\n  const ViewAllBtnHandler = (e: any) => {\n    e.preventDefault();\n    setBtnState(\"all\");\n  };\n  const ImglistBtnHandler = (e: any) => {\n    e.preventDefault();\n    setBtnState(\"img\");\n  };\n  const TextlistBtnHandler = (e: any) => {\n    e.preventDefault();\n    setBtnState(\"text\");\n  };\n\n  return (\n    <>\n      {filterdItem.length === 0 ? (\n        <Loading />\n      ) : (\n        <>\n          {contents.item === 0 ? (\n            <Loading />\n          ) : (\n            <>\n              <Container fluid className=\"card-container mt-4\">\n                <Row className=\"py-0 mb-3 justify-content-center tinder-title\">\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-viewall\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={ViewAllBtnHandler}\n                      >\n                        전체보기\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-imglist\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={ImglistBtnHandler}\n                      >\n                        이상형월드컵\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                  <Col md=\"auto\" className=\"col-tinder\">\n                    <AwesomeButton\n                      type=\"link\"\n                      className=\"font-jua p-0 btn-home-textlist\"\n                    >\n                      <Button\n                        variant=\"tinder-urtest\"\n                        type=\"button\"\n                        onClick={TextlistBtnHandler}\n                      >\n                        밸런스게임\n                      </Button>\n                    </AwesomeButton>\n                  </Col>\n                </Row>\n                {btnState === \"all\" ? (\n                  <>\n                    <Container fluid className=\"fluid-item\">\n                      <div className=\"gridbox\">\n                        {contents.map((el: any, index: number) => {\n                          const token = localStorage.getItem(\"token\");\n                          const userId = jwt.verify(\n                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                            //@ts-ignore\n                            token,\n                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                            //@ts-ignore\n                            process.env.REACT_APP_SECRET_KEY,\n                            function (err: any, decoded: any) {\n                              return decoded.id;\n                            }\n                          );\n                          const book = el.bookMarks?.filter((b: any) => {\n                            if (b.userId === userId) {\n                              return b;\n                            }\n                          });\n                          if (book.length) {\n                            return (\n                              <SwiperSlide\n                                className=\"slide-width mb-2\"\n                                key={index}\n                              >\n                                <Fade bottom>\n                                  {el.photos.length === 0 ? (\n                                    <TextCardItem\n                                      d={el}\n                                      className=\"card-item\"\n                                    />\n                                  ) : (\n                                    <ImgCardItem d={el} className=\"card-item\" />\n                                  )}\n                                </Fade>\n                              </SwiperSlide>\n                            );\n                          }\n                        })}\n                      </div>\n                    </Container>\n                  </>\n                ) : btnState === \"img\" ? (\n                  <ImgList\n                    bookMarkLoading={true}\n                    bookUserId={() => {\n                      const token = localStorage.getItem(\"token\");\n                      const userId = jwt.verify(\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        token,\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        process.env.REACT_APP_SECRET_KEY,\n                        function (err: any, decoded: any) {\n                          return decoded.id;\n                        }\n                      );\n                      return userId;\n                    }}\n                  />\n                ) : (\n                  <TextList\n                    bookMarkLoading={true}\n                    bookUserId={() => {\n                      const token = localStorage.getItem(\"token\");\n                      const userId = jwt.verify(\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        token,\n                        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                        //@ts-ignore\n                        process.env.REACT_APP_SECRET_KEY,\n                        function (err: any, decoded: any) {\n                          return decoded.id;\n                        }\n                      );\n                      return userId;\n                    }}\n                  />\n                )}\n              </Container>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Bookmark;\n","import React, { useState } from \"react\";\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\n\nimport { useHistory } from \"react-router-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport { Col, Row, Button } from \"react-bootstrap\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport jwt from \"jsonwebtoken\";\n\nconst GET_CONTENT = gql`\n  query getContent($id: Int!) {\n    getContent(id: $id) {\n      id\n      question {\n        answer {\n          body\n          createdAt\n          id\n          questionId\n          updatedAt\n        }\n        contentId\n        id\n        questionBody\n        updatedAt\n      }\n      userId\n      title\n      desc\n      type\n    }\n  }\n`;\n\nconst EDIT_TEXT = gql`\n  mutation editTxt(\n    $id: Int!\n    $question: String\n    $answer1: String\n    $answer2: String\n  ) {\n    editTxt(\n      id: $id\n      answer1: $answer1\n      answer2: $answer2\n      question: $question\n    ) {\n      error\n      ok\n    }\n  }\n`;\n\nconst ModifyTestT = (props: any) => {\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n  const [textTests, setTextTests] = useState([] as any[]);\n  const history = useHistory();\n  const [editTxt] = useMutation(EDIT_TEXT, {\n    onCompleted: (data) => {\n      console.log(data);\n      return;\n    },\n  });\n  const textArr: any = [];\n  const {} = useQuery(GET_CONTENT, {\n    variables: {\n      id: +props.gameid,\n    },\n    onCompleted: async (data) => {\n      const token = localStorage.getItem(\"token\");\n      const userId = jwt.verify(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        //@ts-ignore\n        token,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        //@ts-ignore\n        process.env.REACT_APP_SECRET_KEY,\n        function (err: any, decoded: any) {\n          return decoded.id;\n        }\n      );\n      if (data.getContent.userId !== +userId) {\n        history.push(\"/\");\n        return;\n      }\n      if (data.getContent.type !== \"textgame\") {\n        history.push(\"/\");\n        return;\n      }\n      data.getContent.question.map((question: any, idx: number) => {\n        textArr[idx] = {\n          id: idx + 1,\n          qid: question.id,\n          question: question.questionBody,\n          answer1: question.answer[0].body,\n          answer2: question.answer[1].body,\n          answer1Count: question.answer[0].winCount,\n          answer2Count: question.answer[1].winCount,\n        };\n      });\n      setTextTests(textArr);\n      return;\n    },\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"문항번호\",\n    },\n    {\n      dataField: \"question\",\n      text: \"질문\",\n    },\n    {\n      dataField: \"answer1\",\n      text: \"답변1\",\n    },\n    {\n      dataField: \"answer2\",\n      text: \"답변2\",\n    },\n  ];\n\n  const onAfterSave = async (row: any) => {\n    console.log(row);\n    await editTxt({\n      variables: {\n        id: row.qid,\n        question: row.question,\n        answer1: row.answer1,\n        answer2: row.answer2,\n      },\n    });\n  };\n\n  const onSubmit = async () => {\n    setSweetAlertShow(true);\n    return;\n  };\n  return (\n    <>\n      <Row className=\"justify-content-md-center mt-4 mx-2\">\n        <Col md={8} className=\"bg-light rounded pt-3 pb-3\">\n          <>\n            <BootstrapTable\n              keyField=\"id\"\n              data={textTests}\n              columns={columns}\n              cellEdit={cellEditFactory({\n                mode: \"click\",\n                afterSaveCell: (oldValue: any, newValue: any, row: any) => {\n                  onAfterSave(row);\n                },\n              })}\n            />\n          </>\n          <Button\n            block\n            variant=\"dark\"\n            type=\"submit\"\n            size=\"lg\"\n            onClick={onSubmit}\n          >\n            수정 완료\n          </Button>\n        </Col>\n      </Row>\n      <SweetAlert\n        show={sweetAlertShow}\n        showConfirm={false}\n        success\n        title=\"수정 완료!\"\n        onConfirm={() => {\n          const uploadReset = {\n            title: \"\",\n            desc: \"\",\n            files: [],\n            textTest: [\n              {\n                id: \"1\",\n                question: \"질문1\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"2\",\n                question: \"질문2\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"3\",\n                question: \"질문3\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"4\",\n                question: \"질문4\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n            ],\n          };\n\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadReset));\n          history.push(\"/\");\n        }}\n        onCancel={() => {\n          const uploadReset = {\n            title: \"\",\n            desc: \"\",\n            files: [],\n            textTest: [\n              {\n                id: \"1\",\n                question: \"질문1\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"2\",\n                question: \"질문2\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"3\",\n                question: \"질문3\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              {\n                id: \"4\",\n                question: \"질문4\",\n                answer1: \"답변1\",\n                answer2: \"답변2\",\n              },\n              { id: \"5\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"6\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"7\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"8\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"9\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"10\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"11\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"12\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"13\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"14\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"15\", question: \"\", answer1: \"\", answer2: \"\" },\n              { id: \"16\", question: \"\", answer1: \"\", answer2: \"\" },\n            ],\n          };\n\n          localStorage.setItem(\"uploadObj\", JSON.stringify(uploadReset));\n          history.push(\"/\");\n        }}\n      >\n        홈화면으로 이동합니다\n      </SweetAlert>\n    </>\n  );\n};\n\nexport default ModifyTestT;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\nimport { isLoginVar } from \"../common/graphql/client\";\nimport { useReactiveVar } from \"@apollo/client\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\n// Page ---------------------------------------\nimport Home from \"./Home/Home.component\";\nimport Header from \"./Header/Header.component\";\nimport ImgGame from \"./ImgGame/ImgGame.component\";\nimport TextGame from \"./TextGame/TextGame.componet\";\nimport SideDrawer from \"./Sidebar/sidedrawer\";\nimport Signin from \"./Signin/Signin.component\";\nimport Signup from \"./Signup/Signup.component\";\nimport ImgList from \"./ImgList/ImgList.component\";\nimport TextList from \"./TextList/TextList.component\";\nimport SearchList from \"./SearchList/SearchList.component\";\nimport Multistep from \"./Upload/Multistep.component\";\nimport Mypage from \"./Mypage/Mypage.component\";\nimport Analytics from \"./Analytics/Analytics.component\";\nimport ModifyTest from \"./ModifyTest/ModifyTest.component\";\nimport MyTest from \"./MyTest/MyTest.component\";\nimport Bookmark from \"./Bookmark/Bookmark.component\";\nimport ModifyTestT from \"./ModifyTest/ModifyTestT.component\";\n// bootstrap ---------------------------\nimport { Nav, Navbar, Col, Row, Container } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst SideDrawerBrand = () => (\n  <LinkContainer to=\"/\">\n    <Navbar.Brand />\n  </LinkContainer>\n);\n\nconst NoMatch = () => {\n  const location = useLocation();\n\n  return (\n    <Container fluid className=\"vh-93\">\n      <Row className=\"h-20 justify-content-center\">\n        <Col md=\"auto\" className=\"pt-5 font-size-3 notfound-title\">\n          <code className=\"font-bgr\">{location.pathname}</code> 페이지가\n          존재하지 않습니다.\n        </Col>\n      </Row>\n      <Row className=\"h-80\">\n        <Col className=\"bg-image4\"></Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst ImgGameId = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  return <ImgGame gameid={id} />;\n};\nconst TextGameId = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  return <TextGame gameid={id} />;\n};\nconst AnalyticsGameId = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  return <Analytics gameid={id} />;\n};\nconst ModifyGameId = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  return <ModifyTest gameid={id} />;\n};\nconst ModifyTGameId = () => {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { id } = useParams();\n  return <ModifyTestT gameid={id} />;\n};\n\nconst App = () => {\n  const [isSideBarOpen, setSideBarState] = useState(false);\n  const [sweetAlertShow, setSweetAlertShow] = useState(false);\n\n  const history = useHistory();\n  useEffect(() => {\n    const deregisterListener = history.listen(() => {\n      setSideBarState(false);\n    });\n    return () => {\n      deregisterListener();\n    };\n  }, [history]);\n\n  const isLogin = useReactiveVar(isLoginVar);\n\n  const needLogin = () => {\n    setSideBarState(false);\n    setSweetAlertShow(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"uploadObj\");\n    isLoginVar(false);\n  };\n\n  return (\n    <>\n      <Navbar\n        expand={false}\n        className=\"justify-content-start header-nav bg-white\"\n        fixed=\"top\"\n        expanded={false}\n        onToggle={(toggleState: boolean) => {\n          setSideBarState(true);\n        }}\n      >\n        <Header />\n      </Navbar>\n      <SideDrawer\n        isSideDrawerOpen={isSideBarOpen}\n        brand={<SideDrawerBrand />}\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        closeSideDrawer={(ev: any) => setSideBarState(false)}\n      >\n        <Col>\n          <Nav>\n            <Nav.Item>\n              {/* <LinkContainer to=\"/\" exact>\n                <Nav.Link>Home</Nav.Link>\n              </LinkContainer> */}\n            </Nav.Item>\n            {/* <Nav.Item>\n              <LinkContainer to=\"/imglist\">\n                <Nav.Link>이상형월드컵</Nav.Link>\n              </LinkContainer>\n            </Nav.Item>\n            <Nav.Item>\n              <LinkContainer to=\"/textlist\">\n                <Nav.Link>밸런스게임</Nav.Link>\n              </LinkContainer>\n            </Nav.Item> */}\n            <Nav.Item>\n              {isLogin ? (\n                <LinkContainer to=\"/mytest\">\n                  <Nav.Link>내가만든 테스트</Nav.Link>\n                </LinkContainer>\n              ) : (\n                <Nav.Link onClick={needLogin}>내가만든 테스트</Nav.Link>\n              )}\n            </Nav.Item>\n            <Nav.Item>\n              {isLogin ? (\n                <LinkContainer to=\"/mypage\">\n                  <Nav.Link>정보수정</Nav.Link>\n                </LinkContainer>\n              ) : (\n                <Nav.Link onClick={needLogin}>정보수정</Nav.Link>\n              )}\n            </Nav.Item>\n            {isLogin ? (\n              <LinkContainer to=\"/bookmark\">\n                <Nav.Link>즐겨찾기</Nav.Link>\n              </LinkContainer>\n            ) : (\n              <Nav.Link onClick={needLogin}>즐겨찾기</Nav.Link>\n            )}\n            <Nav.Item>\n              {isLogin ? (\n                <LinkContainer to=\"/multistep\">\n                  <Nav.Link>테스트 만들기</Nav.Link>\n                </LinkContainer>\n              ) : (\n                <Nav.Link onClick={needLogin}>테스트 만들기</Nav.Link>\n              )}\n            </Nav.Item>\n            <Nav.Item>\n              {isLogin ? (\n                <LinkContainer to=\"/\">\n                  <Nav.Link onClick={() => logoutHandler()}>Logout</Nav.Link>\n                </LinkContainer>\n              ) : (\n                <LinkContainer to=\"/Login\">\n                  <Nav.Link>Login</Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav.Item>\n          </Nav>\n        </Col>\n      </SideDrawer>\n      <div className=\"main\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/imggame/:id/\" component={ImgGameId} />\n          <Route path=\"/textgame/:id/\" component={TextGameId} />\n          <Route path=\"/analytics/:id/\" component={AnalyticsGameId} />\n          <Route path=\"/imglist\" component={ImgList} />\n          <Route path=\"/textlist\" component={TextList} />\n          <Route path=\"/searchlist\" component={SearchList} />\n          <Route path=\"/login\" component={Signin} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/multistep\" component={Multistep} />\n          <Route path=\"/mypage\" component={Mypage} />\n          <Route path=\"/mytest\" component={MyTest} />\n          <Route path=\"/bookmark\" component={Bookmark} />\n          <Route path=\"/modifytest/:id/\" component={ModifyGameId} />\n          <Route path=\"/modifytext/:id/\" component={ModifyTGameId} />\n          <Route path=\"/*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n        <SweetAlert\n          show={sweetAlertShow}\n          showConfirm={false}\n          success\n          title=\"로그인이 필요해요\"\n          onConfirm={() => {\n            history.push(\"/login\");\n            setSweetAlertShow(false);\n            return;\n          }}\n          onCancel={() => {\n            history.push(\"/login\");\n            setSweetAlertShow(false);\n            return;\n          }}\n        >\n          기다리고 있을게요!\n        </SweetAlert>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","// React ---------------------------------------\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n// Router ---------------------------------------\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// dotenv ------------------------------------\nimport dotenv from \"dotenv\";\ndotenv.config();\n// App ------------------------------------\nimport App from \"./components/App\";\n// CSS ---------------------------------------\nimport \"./common/styles/global.scss\";\n// Apollo ---------------------------------------\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"./common/graphql/client\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Router>\n        <App />\n      </Router>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}